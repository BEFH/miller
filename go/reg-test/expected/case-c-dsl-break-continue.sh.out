

================================================================
DSL BREAK/CONTINUE IN SINGLE WHILE/DO-WHILE

mlr --opprint --from ./reg-test/input/abixy put 
  while ($i < 5) {
    $i += 1;
    break;
    $a = "ERROR";
  }

a   b   i  x                   y
pan pan 2  0.3467901443380824  0.7268028627434533
eks pan 3  0.7586799647899636  0.5221511083334797
wye wye 4  0.20460330576630303 0.33831852551664776
eks wye 5  0.38139939387114097 0.13418874328430463
wye pan 5  0.5732889198020006  0.8636244699032729
zee pan 6  0.5271261600918548  0.49322128674835697
eks zee 7  0.6117840605678454  0.1878849191181694
zee wye 8  0.5985540091064224  0.976181385699006
hat wye 9  0.03144187646093577 0.7495507603507059
pan wye 10 0.5026260055412137  0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put 
  while ($i < 5) {
    $i += 1;
    continue;
    $a = "ERROR";
  }

a   b   i  x                   y
pan pan 5  0.3467901443380824  0.7268028627434533
eks pan 5  0.7586799647899636  0.5221511083334797
wye wye 5  0.20460330576630303 0.33831852551664776
eks wye 5  0.38139939387114097 0.13418874328430463
wye pan 5  0.5732889198020006  0.8636244699032729
zee pan 6  0.5271261600918548  0.49322128674835697
eks zee 7  0.6117840605678454  0.1878849191181694
zee wye 8  0.5985540091064224  0.976181385699006
hat wye 9  0.03144187646093577 0.7495507603507059
pan wye 10 0.5026260055412137  0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put 
  do {
    $i += 1;
    break;
    $a = "ERROR";
  } while ($i < 5);

a   b   i  x                   y
pan pan 2  0.3467901443380824  0.7268028627434533
eks pan 3  0.7586799647899636  0.5221511083334797
wye wye 4  0.20460330576630303 0.33831852551664776
eks wye 5  0.38139939387114097 0.13418874328430463
wye pan 6  0.5732889198020006  0.8636244699032729
zee pan 7  0.5271261600918548  0.49322128674835697
eks zee 8  0.6117840605678454  0.1878849191181694
zee wye 9  0.5985540091064224  0.976181385699006
hat wye 10 0.03144187646093577 0.7495507603507059
pan wye 11 0.5026260055412137  0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put 
  do {
    $i += 1;
    continue;
    $a = "ERROR";
  } while ($i < 5);

a   b   i  x                   y
pan pan 5  0.3467901443380824  0.7268028627434533
eks pan 5  0.7586799647899636  0.5221511083334797
wye wye 5  0.20460330576630303 0.33831852551664776
eks wye 5  0.38139939387114097 0.13418874328430463
wye pan 6  0.5732889198020006  0.8636244699032729
zee pan 7  0.5271261600918548  0.49322128674835697
eks zee 8  0.6117840605678454  0.1878849191181694
zee wye 9  0.5985540091064224  0.976181385699006
hat wye 10 0.03144187646093577 0.7495507603507059
pan wye 11 0.5026260055412137  0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put 
  $NR = NR;
  while ($i < 5) {
    $i += 1;
    if (NR == 2) {
      break;
    }
    $a = "reached";
  }

a       b   i  x                   y                   NR
reached pan 5  0.3467901443380824  0.7268028627434533  1
eks     pan 3  0.7586799647899636  0.5221511083334797  2
reached wye 5  0.20460330576630303 0.33831852551664776 3
reached wye 5  0.38139939387114097 0.13418874328430463 4
wye     pan 5  0.5732889198020006  0.8636244699032729  5
zee     pan 6  0.5271261600918548  0.49322128674835697 6
eks     zee 7  0.6117840605678454  0.1878849191181694  7
zee     wye 8  0.5985540091064224  0.976181385699006   8
hat     wye 9  0.03144187646093577 0.7495507603507059  9
pan     wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $NR = NR;
  while ($i < 5) {
    $i += 1;
    if (NR == 2) {
      continue;
    }
    $a = "reached";
  }

a       b   i  x                   y                   NR
reached pan 5  0.3467901443380824  0.7268028627434533  1
eks     pan 5  0.7586799647899636  0.5221511083334797  2
reached wye 5  0.20460330576630303 0.33831852551664776 3
reached wye 5  0.38139939387114097 0.13418874328430463 4
wye     pan 5  0.5732889198020006  0.8636244699032729  5
zee     pan 6  0.5271261600918548  0.49322128674835697 6
eks     zee 7  0.6117840605678454  0.1878849191181694  7
zee     wye 8  0.5985540091064224  0.976181385699006   8
hat     wye 9  0.03144187646093577 0.7495507603507059  9
pan     wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
$NR = NR;
  do {
    $i += 1;
    if (NR == 2) {
      break;
    }
    $a = "reached";
  } while ($i < 5);

a       b   i  x                   y                   NR
reached pan 5  0.3467901443380824  0.7268028627434533  1
eks     pan 3  0.7586799647899636  0.5221511083334797  2
reached wye 5  0.20460330576630303 0.33831852551664776 3
reached wye 5  0.38139939387114097 0.13418874328430463 4
reached pan 6  0.5732889198020006  0.8636244699032729  5
reached pan 7  0.5271261600918548  0.49322128674835697 6
reached zee 8  0.6117840605678454  0.1878849191181694  7
reached wye 9  0.5985540091064224  0.976181385699006   8
reached wye 10 0.03144187646093577 0.7495507603507059  9
reached wye 11 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $NR = NR;
  do {
    $i += 1;
    if (NR == 2) {
      continue;
    }
    $a = "reached";
  } while ($i < 5);

a       b   i  x                   y                   NR
reached pan 5  0.3467901443380824  0.7268028627434533  1
eks     pan 5  0.7586799647899636  0.5221511083334797  2
reached wye 5  0.20460330576630303 0.33831852551664776 3
reached wye 5  0.38139939387114097 0.13418874328430463 4
reached pan 6  0.5732889198020006  0.8636244699032729  5
reached pan 7  0.5271261600918548  0.49322128674835697 6
reached zee 8  0.6117840605678454  0.1878849191181694  7
reached wye 9  0.5985540091064224  0.976181385699006   8
reached wye 10 0.03144187646093577 0.7495507603507059  9
reached wye 11 0.5026260055412137  0.9526183602969864  10


================================================================
DSL BREAK/CONTINUE IN NESTED WHILE/DO-WHILE

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    break;
    while ($k < 7) {
      $k += 1
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  2 1
eks pan 2 0.7586799647899636  0.5221511083334797  3 2
wye wye 3 0.20460330576630303 0.33831852551664776 4 3

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    continue;
    while ($k < 7) {
      $k += 1
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 1
eks pan 2 0.7586799647899636  0.5221511083334797  4 2
wye wye 3 0.20460330576630303 0.33831852551664776 4 3

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    while ($k < 7) {
      $k += 1;
      break;
      $k += 10000;
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 2
eks pan 2 0.7586799647899636  0.5221511083334797  4 3
wye wye 3 0.20460330576630303 0.33831852551664776 4 4

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    while ($k < 7) {
      $k += 1;
      continue;
      $k += 10000;
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 7
eks pan 2 0.7586799647899636  0.5221511083334797  4 7
wye wye 3 0.20460330576630303 0.33831852551664776 4 7

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    if (NR == 2 || NR == 8) {
      break;
    }
    while ($k < 7) {
      $k += 1
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 7
eks pan 2 0.7586799647899636  0.5221511083334797  3 2
wye wye 3 0.20460330576630303 0.33831852551664776 4 7

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    if (NR == 2 || NR == 8) {
      continue;
    }
    while ($k < 7) {
      $k += 1
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 7
eks pan 2 0.7586799647899636  0.5221511083334797  4 2
wye wye 3 0.20460330576630303 0.33831852551664776 4 7

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    while ($k < 7) {
      $k += 1;
      if (NR == 2 || NR == 8) {
        break;
      }
      $k += 10000;
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 10002
eks pan 2 0.7586799647899636  0.5221511083334797  4 3
wye wye 3 0.20460330576630303 0.33831852551664776 4 10004

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  while ($j < 4) {
    $k = NR;
    $j += 1;
    while ($k < 7) {
      $k += 1;
      if (NR == 2 || NR == 8) {
        continue;
      }
      $k += 10000;
    }
  }

a   b   i x                   y                   j k
pan pan 1 0.3467901443380824  0.7268028627434533  4 10002
eks pan 2 0.7586799647899636  0.5221511083334797  4 7
wye wye 3 0.20460330576630303 0.33831852551664776 4 10004

a   b   i  x                   y                   j
eks wye 4  0.38139939387114097 0.13418874328430463 4
wye pan 5  0.5732889198020006  0.8636244699032729  5
zee pan 6  0.5271261600918548  0.49322128674835697 6
eks zee 7  0.6117840605678454  0.1878849191181694  7
zee wye 8  0.5985540091064224  0.976181385699006   8
hat wye 9  0.03144187646093577 0.7495507603507059  9
pan wye 10 0.5026260055412137  0.9526183602969864  10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    break;
    do {
      $k += 1
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  2  1
eks pan 2  0.7586799647899636  0.5221511083334797  3  2
wye wye 3  0.20460330576630303 0.33831852551664776 4  3
eks wye 4  0.38139939387114097 0.13418874328430463 5  4
wye pan 5  0.5732889198020006  0.8636244699032729  6  5
zee pan 6  0.5271261600918548  0.49322128674835697 7  6
eks zee 7  0.6117840605678454  0.1878849191181694  8  7
zee wye 8  0.5985540091064224  0.976181385699006   9  8
hat wye 9  0.03144187646093577 0.7495507603507059  10 9
pan wye 10 0.5026260055412137  0.9526183602969864  11 10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    continue;
    do {
      $k += 1
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  1
eks pan 2  0.7586799647899636  0.5221511083334797  4  2
wye wye 3  0.20460330576630303 0.33831852551664776 4  3
eks wye 4  0.38139939387114097 0.13418874328430463 5  4
wye pan 5  0.5732889198020006  0.8636244699032729  6  5
zee pan 6  0.5271261600918548  0.49322128674835697 7  6
eks zee 7  0.6117840605678454  0.1878849191181694  8  7
zee wye 8  0.5985540091064224  0.976181385699006   9  8
hat wye 9  0.03144187646093577 0.7495507603507059  10 9
pan wye 10 0.5026260055412137  0.9526183602969864  11 10

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    do {
      $k += 1;
      break;
      $k += 10000;
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  2
eks pan 2  0.7586799647899636  0.5221511083334797  4  3
wye wye 3  0.20460330576630303 0.33831852551664776 4  4
eks wye 4  0.38139939387114097 0.13418874328430463 5  5
wye pan 5  0.5732889198020006  0.8636244699032729  6  6
zee pan 6  0.5271261600918548  0.49322128674835697 7  7
eks zee 7  0.6117840605678454  0.1878849191181694  8  8
zee wye 8  0.5985540091064224  0.976181385699006   9  9
hat wye 9  0.03144187646093577 0.7495507603507059  10 10
pan wye 10 0.5026260055412137  0.9526183602969864  11 11

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    do {
      $k += 1;
      continue;
      $k += 10000;
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  7
eks pan 2  0.7586799647899636  0.5221511083334797  4  7
wye wye 3  0.20460330576630303 0.33831852551664776 4  7
eks wye 4  0.38139939387114097 0.13418874328430463 5  7
wye pan 5  0.5732889198020006  0.8636244699032729  6  7
zee pan 6  0.5271261600918548  0.49322128674835697 7  7
eks zee 7  0.6117840605678454  0.1878849191181694  8  8
zee wye 8  0.5985540091064224  0.976181385699006   9  9
hat wye 9  0.03144187646093577 0.7495507603507059  10 10
pan wye 10 0.5026260055412137  0.9526183602969864  11 11

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    if (NR == 2 || NR == 8) {
      break;
    }
    do {
      $k += 1
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  7
eks pan 2  0.7586799647899636  0.5221511083334797  3  2
wye wye 3  0.20460330576630303 0.33831852551664776 4  7
eks wye 4  0.38139939387114097 0.13418874328430463 5  7
wye pan 5  0.5732889198020006  0.8636244699032729  6  7
zee pan 6  0.5271261600918548  0.49322128674835697 7  7
eks zee 7  0.6117840605678454  0.1878849191181694  8  8
zee wye 8  0.5985540091064224  0.976181385699006   9  8
hat wye 9  0.03144187646093577 0.7495507603507059  10 10
pan wye 10 0.5026260055412137  0.9526183602969864  11 11

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    if (NR == 2 || NR == 8) {
      continue;
    }
    do {
      $k += 1
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  7
eks pan 2  0.7586799647899636  0.5221511083334797  4  2
wye wye 3  0.20460330576630303 0.33831852551664776 4  7
eks wye 4  0.38139939387114097 0.13418874328430463 5  7
wye pan 5  0.5732889198020006  0.8636244699032729  6  7
zee pan 6  0.5271261600918548  0.49322128674835697 7  7
eks zee 7  0.6117840605678454  0.1878849191181694  8  8
zee wye 8  0.5985540091064224  0.976181385699006   9  8
hat wye 9  0.03144187646093577 0.7495507603507059  10 10
pan wye 10 0.5026260055412137  0.9526183602969864  11 11

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    do {
      $k += 1;
      if (NR == 2 || NR == 8) {
        break;
      }
      $k += 10000;
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  10002
eks pan 2  0.7586799647899636  0.5221511083334797  4  3
wye wye 3  0.20460330576630303 0.33831852551664776 4  10004
eks wye 4  0.38139939387114097 0.13418874328430463 5  10005
wye pan 5  0.5732889198020006  0.8636244699032729  6  10006
zee pan 6  0.5271261600918548  0.49322128674835697 7  10007
eks zee 7  0.6117840605678454  0.1878849191181694  8  10008
zee wye 8  0.5985540091064224  0.976181385699006   9  9
hat wye 9  0.03144187646093577 0.7495507603507059  10 10010
pan wye 10 0.5026260055412137  0.9526183602969864  11 10011

mlr --opprint --from ./reg-test/input/abixy put 
  $j = NR;
  do {
    $k = NR;
    $j += 1;
    do {
      $k += 1;
      if (NR == 2 || NR == 8) {
        continue;
      }
      $k += 10000;
    } while ($k < 7);
  } while ($j < 4);

a   b   i  x                   y                   j  k
pan pan 1  0.3467901443380824  0.7268028627434533  4  10002
eks pan 2  0.7586799647899636  0.5221511083334797  4  7
wye wye 3  0.20460330576630303 0.33831852551664776 4  10004
eks wye 4  0.38139939387114097 0.13418874328430463 5  10005
wye pan 5  0.5732889198020006  0.8636244699032729  6  10006
zee pan 6  0.5271261600918548  0.49322128674835697 7  10007
eks zee 7  0.6117840605678454  0.1878849191181694  8  10008
zee wye 8  0.5985540091064224  0.976181385699006   9  9
hat wye 9  0.03144187646093577 0.7495507603507059  10 10010
pan wye 10 0.5026260055412137  0.9526183602969864  11 10011


================================================================
DSL BREAK/CONTINUE IN SINGLE FOR-SREC

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k,v in $*) {
      @logging1[NR][k] = v;
      if (k == "x") {
          break;
      }
  }
  end {
    emitp @logging1, "NR", "k";
  }

NR k logging1
1  a pan
1  b pan
1  i 1
1  x 0.346790
2  a eks
2  b pan
2  i 2
2  x 0.758680
3  a wye
3  b wye
3  i 3
3  x 0.204603
4  a eks
4  b wye
4  i 4
4  x 0.381399
5  a wye
5  b pan
5  i 5
5  x 0.573289
6  a zee
6  b pan
6  i 6
6  x 0.527126
7  a eks
7  b zee
7  i 7
7  x 0.611784
8  a zee
8  b wye
8  i 8
8  x 0.598554
9  a hat
9  b wye
9  i 9
9  x 0.031442
10 a pan
10 b wye
10 i 10
10 x 0.502626

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k,v in $*) {
      if (k == "x") {
          break;
      }
      @logging2[NR][k] = v;
  }
  end {
    emitp @logging2, "NR", "k";
  }

NR k logging2
1  a pan
1  b pan
1  i 1
2  a eks
2  b pan
2  i 2
3  a wye
3  b wye
3  i 3
4  a eks
4  b wye
4  i 4
5  a wye
5  b pan
5  i 5
6  a zee
6  b pan
6  i 6
7  a eks
7  b zee
7  i 7
8  a zee
8  b wye
8  i 8
9  a hat
9  b wye
9  i 9
10 a pan
10 b wye
10 i 10

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k,v in $*) {
      @logging3[NR][k] = v;
      if (k == "x") {
          continue;
      }
  }
  end {
    emitp @logging3, "NR", "k";
  }

NR k logging3
1  a pan
1  b pan
1  i 1
1  x 0.346790
1  y 0.726803
2  a eks
2  b pan
2  i 2
2  x 0.758680
2  y 0.522151
3  a wye
3  b wye
3  i 3
3  x 0.204603
3  y 0.338319
4  a eks
4  b wye
4  i 4
4  x 0.381399
4  y 0.134189
5  a wye
5  b pan
5  i 5
5  x 0.573289
5  y 0.863624
6  a zee
6  b pan
6  i 6
6  x 0.527126
6  y 0.493221
7  a eks
7  b zee
7  i 7
7  x 0.611784
7  y 0.187885
8  a zee
8  b wye
8  i 8
8  x 0.598554
8  y 0.976181
9  a hat
9  b wye
9  i 9
9  x 0.031442
9  y 0.749551
10 a pan
10 b wye
10 i 10
10 x 0.502626
10 y 0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k,v in $*) {
      if (k == "x") {
          continue;
      }
      @logging4[NR][k] = v;
  }
  end {
    emitp @logging4, "NR", "k"
  }

NR k logging4
1  a pan
1  b pan
1  i 1
1  y 0.726803
2  a eks
2  b pan
2  i 2
2  y 0.522151
3  a wye
3  b wye
3  i 3
3  y 0.338319
4  a eks
4  b wye
4  i 4
4  y 0.134189
5  a wye
5  b pan
5  i 5
5  y 0.863624
6  a zee
6  b pan
6  i 6
6  y 0.493221
7  a eks
7  b zee
7  i 7
7  y 0.187885
8  a zee
8  b wye
8  i 8
8  y 0.976181
9  a hat
9  b wye
9  i 9
9  y 0.749551
10 a pan
10 b wye
10 i 10
10 y 0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k,v in $*) {
      @logging1[NR][k] = v;
      if (k == "x") {
          break;
      }
  }

  for (k,v in $*) {
      if (k == "x") {
          break;
      }
      @logging2[NR][k] = v;
  }

  for (k,v in $*) {
      @logging3[NR][k] = v;
      if (k == "x") {
          continue;
      }
  }

  for (k,v in $*) {
      if (k == "x") {
          continue;
      }
      @logging4[NR][k] = v;
  }

  end {
    emitp @logging1, "NR", "k";
    emitp @logging2, "NR", "k";
    emitp @logging3, "NR", "k";
    emitp @logging4, "NR", "k"
  }

NR k logging1
1  a pan
1  b pan
1  i 1
1  x 0.346790
2  a eks
2  b pan
2  i 2
2  x 0.758680
3  a wye
3  b wye
3  i 3
3  x 0.204603
4  a eks
4  b wye
4  i 4
4  x 0.381399
5  a wye
5  b pan
5  i 5
5  x 0.573289
6  a zee
6  b pan
6  i 6
6  x 0.527126
7  a eks
7  b zee
7  i 7
7  x 0.611784
8  a zee
8  b wye
8  i 8
8  x 0.598554
9  a hat
9  b wye
9  i 9
9  x 0.031442
10 a pan
10 b wye
10 i 10
10 x 0.502626

NR k logging2
1  a pan
1  b pan
1  i 1
2  a eks
2  b pan
2  i 2
3  a wye
3  b wye
3  i 3
4  a eks
4  b wye
4  i 4
5  a wye
5  b pan
5  i 5
6  a zee
6  b pan
6  i 6
7  a eks
7  b zee
7  i 7
8  a zee
8  b wye
8  i 8
9  a hat
9  b wye
9  i 9
10 a pan
10 b wye
10 i 10

NR k logging3
1  a pan
1  b pan
1  i 1
1  x 0.346790
1  y 0.726803
2  a eks
2  b pan
2  i 2
2  x 0.758680
2  y 0.522151
3  a wye
3  b wye
3  i 3
3  x 0.204603
3  y 0.338319
4  a eks
4  b wye
4  i 4
4  x 0.381399
4  y 0.134189
5  a wye
5  b pan
5  i 5
5  x 0.573289
5  y 0.863624
6  a zee
6  b pan
6  i 6
6  x 0.527126
6  y 0.493221
7  a eks
7  b zee
7  i 7
7  x 0.611784
7  y 0.187885
8  a zee
8  b wye
8  i 8
8  x 0.598554
8  y 0.976181
9  a hat
9  b wye
9  i 9
9  x 0.031442
9  y 0.749551
10 a pan
10 b wye
10 i 10
10 x 0.502626
10 y 0.952618

NR k logging4
1  a pan
1  b pan
1  i 1
1  y 0.726803
2  a eks
2  b pan
2  i 2
2  y 0.522151
3  a wye
3  b wye
3  i 3
3  y 0.338319
4  a eks
4  b wye
4  i 4
4  y 0.134189
5  a wye
5  b pan
5  i 5
5  y 0.863624
6  a zee
6  b pan
6  i 6
6  y 0.493221
7  a eks
7  b zee
7  i 7
7  y 0.187885
8  a zee
8  b wye
8  i 8
8  y 0.976181
9  a hat
9  b wye
9  i 9
9  y 0.749551
10 a pan
10 b wye
10 i 10
10 y 0.952618


================================================================
DSL BREAK/CONTINUE IN NESTED FOR-SREC

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    break;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
2  a    before
3  a    before
4  a    before
5  a    before
6  a    before
7  a    before
8  a    before
9  a    before
10 a    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    continue;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
1  b    before
1  i    before
1  x    before
1  y    before
2  a    before
2  b    before
2  i    before
2  x    before
2  y    before
3  a    before
3  b    before
3  i    before
3  x    before
3  y    before
4  a    before
4  b    before
4  i    before
4  x    before
4  y    before
5  a    before
5  b    before
5  i    before
5  x    before
5  y    before
6  a    before
6  b    before
6  i    before
6  x    before
6  y    before
7  a    before
7  b    before
7  i    before
7  x    before
7  y    before
8  a    before
8  b    before
8  i    before
8  x    before
8  y    before
9  a    before
9  b    before
9  i    before
9  x    before
9  y    before
10 a    before
10 b    before
10 i    before
10 x    before
10 y    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      break;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    pan
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    pan
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    wye
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    wye
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    pan
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    pan
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    zee
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    wye
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    wye
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    wye
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   before
1  b_a   before
1  i_a   before
1  x_a   before
1  y_a   before
2  a_a   before
2  b_a   before
2  i_a   before
2  x_a   before
2  y_a   before
3  a_a   before
3  b_a   before
3  i_a   before
3  x_a   before
3  y_a   before
4  a_a   before
4  b_a   before
4  i_a   before
4  x_a   before
4  y_a   before
5  a_a   before
5  b_a   before
5  i_a   before
5  x_a   before
5  y_a   before
6  a_a   before
6  b_a   before
6  i_a   before
6  x_a   before
6  y_a   before
7  a_a   before
7  b_a   before
7  i_a   before
7  x_a   before
7  y_a   before
8  a_a   before
8  b_a   before
8  i_a   before
8  x_a   before
8  y_a   before
9  a_a   before
9  b_a   before
9  i_a   before
9  x_a   before
9  y_a   before
10 a_a   before
10 b_a   before
10 i_a   before
10 x_a   before
10 y_a   before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      continue;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    pan
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    pan
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    wye
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    wye
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    pan
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    pan
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    zee
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    wye
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    wye
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    wye
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   before
1  a_b   before
1  a_i   before
1  a_x   before
1  a_y   before
1  b_a   before
1  b_b   before
1  b_i   before
1  b_x   before
1  b_y   before
1  i_a   before
1  i_b   before
1  i_i   before
1  i_x   before
1  i_y   before
1  x_a   before
1  x_b   before
1  x_i   before
1  x_x   before
1  x_y   before
1  y_a   before
1  y_b   before
1  y_i   before
1  y_x   before
1  y_y   before
2  a_a   before
2  a_b   before
2  a_i   before
2  a_x   before
2  a_y   before
2  b_a   before
2  b_b   before
2  b_i   before
2  b_x   before
2  b_y   before
2  i_a   before
2  i_b   before
2  i_i   before
2  i_x   before
2  i_y   before
2  x_a   before
2  x_b   before
2  x_i   before
2  x_x   before
2  x_y   before
2  y_a   before
2  y_b   before
2  y_i   before
2  y_x   before
2  y_y   before
3  a_a   before
3  a_b   before
3  a_i   before
3  a_x   before
3  a_y   before
3  b_a   before
3  b_b   before
3  b_i   before
3  b_x   before
3  b_y   before
3  i_a   before
3  i_b   before
3  i_i   before
3  i_x   before
3  i_y   before
3  x_a   before
3  x_b   before
3  x_i   before
3  x_x   before
3  x_y   before
3  y_a   before
3  y_b   before
3  y_i   before
3  y_x   before
3  y_y   before
4  a_a   before
4  a_b   before
4  a_i   before
4  a_x   before
4  a_y   before
4  b_a   before
4  b_b   before
4  b_i   before
4  b_x   before
4  b_y   before
4  i_a   before
4  i_b   before
4  i_i   before
4  i_x   before
4  i_y   before
4  x_a   before
4  x_b   before
4  x_i   before
4  x_x   before
4  x_y   before
4  y_a   before
4  y_b   before
4  y_i   before
4  y_x   before
4  y_y   before
5  a_a   before
5  a_b   before
5  a_i   before
5  a_x   before
5  a_y   before
5  b_a   before
5  b_b   before
5  b_i   before
5  b_x   before
5  b_y   before
5  i_a   before
5  i_b   before
5  i_i   before
5  i_x   before
5  i_y   before
5  x_a   before
5  x_b   before
5  x_i   before
5  x_x   before
5  x_y   before
5  y_a   before
5  y_b   before
5  y_i   before
5  y_x   before
5  y_y   before
6  a_a   before
6  a_b   before
6  a_i   before
6  a_x   before
6  a_y   before
6  b_a   before
6  b_b   before
6  b_i   before
6  b_x   before
6  b_y   before
6  i_a   before
6  i_b   before
6  i_i   before
6  i_x   before
6  i_y   before
6  x_a   before
6  x_b   before
6  x_i   before
6  x_x   before
6  x_y   before
6  y_a   before
6  y_b   before
6  y_i   before
6  y_x   before
6  y_y   before
7  a_a   before
7  a_b   before
7  a_i   before
7  a_x   before
7  a_y   before
7  b_a   before
7  b_b   before
7  b_i   before
7  b_x   before
7  b_y   before
7  i_a   before
7  i_b   before
7  i_i   before
7  i_x   before
7  i_y   before
7  x_a   before
7  x_b   before
7  x_i   before
7  x_x   before
7  x_y   before
7  y_a   before
7  y_b   before
7  y_i   before
7  y_x   before
7  y_y   before
8  a_a   before
8  a_b   before
8  a_i   before
8  a_x   before
8  a_y   before
8  b_a   before
8  b_b   before
8  b_i   before
8  b_x   before
8  b_y   before
8  i_a   before
8  i_b   before
8  i_i   before
8  i_x   before
8  i_y   before
8  x_a   before
8  x_b   before
8  x_i   before
8  x_x   before
8  x_y   before
8  y_a   before
8  y_b   before
8  y_i   before
8  y_x   before
8  y_y   before
9  a_a   before
9  a_b   before
9  a_i   before
9  a_x   before
9  a_y   before
9  b_a   before
9  b_b   before
9  b_i   before
9  b_x   before
9  b_y   before
9  i_a   before
9  i_b   before
9  i_i   before
9  i_x   before
9  i_y   before
9  x_a   before
9  x_b   before
9  x_i   before
9  x_x   before
9  x_y   before
9  y_a   before
9  y_b   before
9  y_i   before
9  y_x   before
9  y_y   before
10 a_a   before
10 a_b   before
10 a_i   before
10 a_x   before
10 a_y   before
10 b_a   before
10 b_b   before
10 b_i   before
10 b_x   before
10 b_y   before
10 i_a   before
10 i_b   before
10 i_i   before
10 i_x   before
10 i_y   before
10 x_a   before
10 x_b   before
10 x_i   before
10 x_x   before
10 x_y   before
10 y_a   before
10 y_b   before
10 y_i   before
10 y_x   before
10 y_y   before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    break;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      break;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
2  a    before
3  a    before
4  a    before
5  a    before
6  a    before
7  a    before
8  a    before
9  a    before
10 a    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    continue;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      break;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
1  b    before
1  i    before
1  x    before
1  y    before
2  a    before
2  b    before
2  i    before
2  x    before
2  y    before
3  a    before
3  b    before
3  i    before
3  x    before
3  y    before
4  a    before
4  b    before
4  i    before
4  x    before
4  y    before
5  a    before
5  b    before
5  i    before
5  x    before
5  y    before
6  a    before
6  b    before
6  i    before
6  x    before
6  y    before
7  a    before
7  b    before
7  i    before
7  x    before
7  y    before
8  a    before
8  b    before
8  i    before
8  x    before
8  y    before
9  a    before
9  b    before
9  i    before
9  x    before
9  y    before
10 a    before
10 b    before
10 i    before
10 x    before
10 y    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    break;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      continue;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
2  a    before
3  a    before
4  a    before
5  a    before
6  a    before
7  a    before
8  a    before
9  a    before
10 a    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    continue;
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      continue;
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    before
1  b    before
1  i    before
1  x    before
1  y    before
2  a    before
2  b    before
2  i    before
2  x    before
2  y    before
3  a    before
3  b    before
3  i    before
3  x    before
3  y    before
4  a    before
4  b    before
4  i    before
4  x    before
4  y    before
5  a    before
5  b    before
5  i    before
5  x    before
5  y    before
6  a    before
6  b    before
6  i    before
6  x    before
6  y    before
7  a    before
7  b    before
7  i    before
7  x    before
7  y    before
8  a    before
8  b    before
8  i    before
8  x    before
8  y    before
9  a    before
9  b    before
9  i    before
9  x    before
9  y    before
10 a    before
10 b    before
10 i    before
10 x    before
10 y    before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        break
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
2  a    eks
2  b    before
3  a    wye
3  b    before
4  a    eks
4  b    before
5  a    wye
5  b    before
6  a    zee
6  b    before
7  a    eks
7  b    before
8  a    zee
8  b    before
9  a    hat
9  b    before
10 a    pan
10 b    before

NR names output2
1  a_a   pan
1  a_b   pan
1  a_i   1
1  a_x   0.346790
1  a_y   0.726803
2  a_a   eks
2  a_b   pan
2  a_i   2
2  a_x   0.758680
2  a_y   0.522151
3  a_a   wye
3  a_b   wye
3  a_i   3
3  a_x   0.204603
3  a_y   0.338319
4  a_a   eks
4  a_b   wye
4  a_i   4
4  a_x   0.381399
4  a_y   0.134189
5  a_a   wye
5  a_b   pan
5  a_i   5
5  a_x   0.573289
5  a_y   0.863624
6  a_a   zee
6  a_b   pan
6  a_i   6
6  a_x   0.527126
6  a_y   0.493221
7  a_a   eks
7  a_b   zee
7  a_i   7
7  a_x   0.611784
7  a_y   0.187885
8  a_a   zee
8  a_b   wye
8  a_i   8
8  a_x   0.598554
8  a_y   0.976181
9  a_a   hat
9  a_b   wye
9  a_i   9
9  a_x   0.031442
9  a_y   0.749551
10 a_a   pan
10 a_b   wye
10 a_i   10
10 a_x   0.502626
10 a_y   0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        continue
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    before
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    before
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    before
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    before
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    before
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    before
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    before
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    before
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    before
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   pan
1  a_b   pan
1  a_i   1
1  a_x   0.346790
1  a_y   0.726803
1  i_a   pan
1  i_b   pan
1  i_i   1
1  i_x   0.346790
1  i_y   0.726803
1  x_a   pan
1  x_b   pan
1  x_i   1
1  x_x   0.346790
1  x_y   0.726803
1  y_a   pan
1  y_b   pan
1  y_i   1
1  y_x   0.346790
1  y_y   0.726803
2  a_a   eks
2  a_b   pan
2  a_i   2
2  a_x   0.758680
2  a_y   0.522151
2  i_a   eks
2  i_b   pan
2  i_i   2
2  i_x   0.758680
2  i_y   0.522151
2  x_a   eks
2  x_b   pan
2  x_i   2
2  x_x   0.758680
2  x_y   0.522151
2  y_a   eks
2  y_b   pan
2  y_i   2
2  y_x   0.758680
2  y_y   0.522151
3  a_a   wye
3  a_b   wye
3  a_i   3
3  a_x   0.204603
3  a_y   0.338319
3  i_a   wye
3  i_b   wye
3  i_i   3
3  i_x   0.204603
3  i_y   0.338319
3  x_a   wye
3  x_b   wye
3  x_i   3
3  x_x   0.204603
3  x_y   0.338319
3  y_a   wye
3  y_b   wye
3  y_i   3
3  y_x   0.204603
3  y_y   0.338319
4  a_a   eks
4  a_b   wye
4  a_i   4
4  a_x   0.381399
4  a_y   0.134189
4  i_a   eks
4  i_b   wye
4  i_i   4
4  i_x   0.381399
4  i_y   0.134189
4  x_a   eks
4  x_b   wye
4  x_i   4
4  x_x   0.381399
4  x_y   0.134189
4  y_a   eks
4  y_b   wye
4  y_i   4
4  y_x   0.381399
4  y_y   0.134189
5  a_a   wye
5  a_b   pan
5  a_i   5
5  a_x   0.573289
5  a_y   0.863624
5  i_a   wye
5  i_b   pan
5  i_i   5
5  i_x   0.573289
5  i_y   0.863624
5  x_a   wye
5  x_b   pan
5  x_i   5
5  x_x   0.573289
5  x_y   0.863624
5  y_a   wye
5  y_b   pan
5  y_i   5
5  y_x   0.573289
5  y_y   0.863624
6  a_a   zee
6  a_b   pan
6  a_i   6
6  a_x   0.527126
6  a_y   0.493221
6  i_a   zee
6  i_b   pan
6  i_i   6
6  i_x   0.527126
6  i_y   0.493221
6  x_a   zee
6  x_b   pan
6  x_i   6
6  x_x   0.527126
6  x_y   0.493221
6  y_a   zee
6  y_b   pan
6  y_i   6
6  y_x   0.527126
6  y_y   0.493221
7  a_a   eks
7  a_b   zee
7  a_i   7
7  a_x   0.611784
7  a_y   0.187885
7  i_a   eks
7  i_b   zee
7  i_i   7
7  i_x   0.611784
7  i_y   0.187885
7  x_a   eks
7  x_b   zee
7  x_i   7
7  x_x   0.611784
7  x_y   0.187885
7  y_a   eks
7  y_b   zee
7  y_i   7
7  y_x   0.611784
7  y_y   0.187885
8  a_a   zee
8  a_b   wye
8  a_i   8
8  a_x   0.598554
8  a_y   0.976181
8  i_a   zee
8  i_b   wye
8  i_i   8
8  i_x   0.598554
8  i_y   0.976181
8  x_a   zee
8  x_b   wye
8  x_i   8
8  x_x   0.598554
8  x_y   0.976181
8  y_a   zee
8  y_b   wye
8  y_i   8
8  y_x   0.598554
8  y_y   0.976181
9  a_a   hat
9  a_b   wye
9  a_i   9
9  a_x   0.031442
9  a_y   0.749551
9  i_a   hat
9  i_b   wye
9  i_i   9
9  i_x   0.031442
9  i_y   0.749551
9  x_a   hat
9  x_b   wye
9  x_i   9
9  x_x   0.031442
9  x_y   0.749551
9  y_a   hat
9  y_b   wye
9  y_i   9
9  y_x   0.031442
9  y_y   0.749551
10 a_a   pan
10 a_b   wye
10 a_i   10
10 a_x   0.502626
10 a_y   0.952618
10 i_a   pan
10 i_b   wye
10 i_i   10
10 i_x   0.502626
10 i_y   0.952618
10 x_a   pan
10 x_b   wye
10 x_i   10
10 x_x   0.502626
10 x_y   0.952618
10 y_a   pan
10 y_b   wye
10 y_i   10
10 y_x   0.502626
10 y_y   0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "a") {
          break
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    pan
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    pan
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    wye
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    wye
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    pan
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    pan
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    zee
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    wye
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    wye
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    wye
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   before
1  b_a   before
1  i_a   before
1  x_a   before
1  y_a   before
2  a_a   before
2  b_a   before
2  i_a   before
2  x_a   before
2  y_a   before
3  a_a   before
3  b_a   before
3  i_a   before
3  x_a   before
3  y_a   before
4  a_a   before
4  b_a   before
4  i_a   before
4  x_a   before
4  y_a   before
5  a_a   before
5  b_a   before
5  i_a   before
5  x_a   before
5  y_a   before
6  a_a   before
6  b_a   before
6  i_a   before
6  x_a   before
6  y_a   before
7  a_a   before
7  b_a   before
7  i_a   before
7  x_a   before
7  y_a   before
8  a_a   before
8  b_a   before
8  i_a   before
8  x_a   before
8  y_a   before
9  a_a   before
9  b_a   before
9  i_a   before
9  x_a   before
9  y_a   before
10 a_a   before
10 b_a   before
10 i_a   before
10 x_a   before
10 y_a   before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "b") {
          continue
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    pan
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    pan
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    wye
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    wye
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    pan
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    pan
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    zee
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    wye
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    wye
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    wye
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   pan
1  a_b   before
1  a_i   1
1  a_x   0.346790
1  a_y   0.726803
1  b_a   pan
1  b_b   before
1  b_i   1
1  b_x   0.346790
1  b_y   0.726803
1  i_a   pan
1  i_b   before
1  i_i   1
1  i_x   0.346790
1  i_y   0.726803
1  x_a   pan
1  x_b   before
1  x_i   1
1  x_x   0.346790
1  x_y   0.726803
1  y_a   pan
1  y_b   before
1  y_i   1
1  y_x   0.346790
1  y_y   0.726803
2  a_a   eks
2  a_b   before
2  a_i   2
2  a_x   0.758680
2  a_y   0.522151
2  b_a   eks
2  b_b   before
2  b_i   2
2  b_x   0.758680
2  b_y   0.522151
2  i_a   eks
2  i_b   before
2  i_i   2
2  i_x   0.758680
2  i_y   0.522151
2  x_a   eks
2  x_b   before
2  x_i   2
2  x_x   0.758680
2  x_y   0.522151
2  y_a   eks
2  y_b   before
2  y_i   2
2  y_x   0.758680
2  y_y   0.522151
3  a_a   wye
3  a_b   before
3  a_i   3
3  a_x   0.204603
3  a_y   0.338319
3  b_a   wye
3  b_b   before
3  b_i   3
3  b_x   0.204603
3  b_y   0.338319
3  i_a   wye
3  i_b   before
3  i_i   3
3  i_x   0.204603
3  i_y   0.338319
3  x_a   wye
3  x_b   before
3  x_i   3
3  x_x   0.204603
3  x_y   0.338319
3  y_a   wye
3  y_b   before
3  y_i   3
3  y_x   0.204603
3  y_y   0.338319
4  a_a   eks
4  a_b   before
4  a_i   4
4  a_x   0.381399
4  a_y   0.134189
4  b_a   eks
4  b_b   before
4  b_i   4
4  b_x   0.381399
4  b_y   0.134189
4  i_a   eks
4  i_b   before
4  i_i   4
4  i_x   0.381399
4  i_y   0.134189
4  x_a   eks
4  x_b   before
4  x_i   4
4  x_x   0.381399
4  x_y   0.134189
4  y_a   eks
4  y_b   before
4  y_i   4
4  y_x   0.381399
4  y_y   0.134189
5  a_a   wye
5  a_b   before
5  a_i   5
5  a_x   0.573289
5  a_y   0.863624
5  b_a   wye
5  b_b   before
5  b_i   5
5  b_x   0.573289
5  b_y   0.863624
5  i_a   wye
5  i_b   before
5  i_i   5
5  i_x   0.573289
5  i_y   0.863624
5  x_a   wye
5  x_b   before
5  x_i   5
5  x_x   0.573289
5  x_y   0.863624
5  y_a   wye
5  y_b   before
5  y_i   5
5  y_x   0.573289
5  y_y   0.863624
6  a_a   zee
6  a_b   before
6  a_i   6
6  a_x   0.527126
6  a_y   0.493221
6  b_a   zee
6  b_b   before
6  b_i   6
6  b_x   0.527126
6  b_y   0.493221
6  i_a   zee
6  i_b   before
6  i_i   6
6  i_x   0.527126
6  i_y   0.493221
6  x_a   zee
6  x_b   before
6  x_i   6
6  x_x   0.527126
6  x_y   0.493221
6  y_a   zee
6  y_b   before
6  y_i   6
6  y_x   0.527126
6  y_y   0.493221
7  a_a   eks
7  a_b   before
7  a_i   7
7  a_x   0.611784
7  a_y   0.187885
7  b_a   eks
7  b_b   before
7  b_i   7
7  b_x   0.611784
7  b_y   0.187885
7  i_a   eks
7  i_b   before
7  i_i   7
7  i_x   0.611784
7  i_y   0.187885
7  x_a   eks
7  x_b   before
7  x_i   7
7  x_x   0.611784
7  x_y   0.187885
7  y_a   eks
7  y_b   before
7  y_i   7
7  y_x   0.611784
7  y_y   0.187885
8  a_a   zee
8  a_b   before
8  a_i   8
8  a_x   0.598554
8  a_y   0.976181
8  b_a   zee
8  b_b   before
8  b_i   8
8  b_x   0.598554
8  b_y   0.976181
8  i_a   zee
8  i_b   before
8  i_i   8
8  i_x   0.598554
8  i_y   0.976181
8  x_a   zee
8  x_b   before
8  x_i   8
8  x_x   0.598554
8  x_y   0.976181
8  y_a   zee
8  y_b   before
8  y_i   8
8  y_x   0.598554
8  y_y   0.976181
9  a_a   hat
9  a_b   before
9  a_i   9
9  a_x   0.031442
9  a_y   0.749551
9  b_a   hat
9  b_b   before
9  b_i   9
9  b_x   0.031442
9  b_y   0.749551
9  i_a   hat
9  i_b   before
9  i_i   9
9  i_x   0.031442
9  i_y   0.749551
9  x_a   hat
9  x_b   before
9  x_i   9
9  x_x   0.031442
9  x_y   0.749551
9  y_a   hat
9  y_b   before
9  y_i   9
9  y_x   0.031442
9  y_y   0.749551
10 a_a   pan
10 a_b   before
10 a_i   10
10 a_x   0.502626
10 a_y   0.952618
10 b_a   pan
10 b_b   before
10 b_i   10
10 b_x   0.502626
10 b_y   0.952618
10 i_a   pan
10 i_b   before
10 i_i   10
10 i_x   0.502626
10 i_y   0.952618
10 x_a   pan
10 x_b   before
10 x_i   10
10 x_x   0.502626
10 x_y   0.952618
10 y_a   pan
10 y_b   before
10 y_i   10
10 y_x   0.502626
10 y_y   0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        break
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "a") {
          break
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
2  a    eks
2  b    before
3  a    wye
3  b    before
4  a    eks
4  b    before
5  a    wye
5  b    before
6  a    zee
6  b    before
7  a    eks
7  b    before
8  a    zee
8  b    before
9  a    hat
9  b    before
10 a    pan
10 b    before

NR names output2
1  a_a   before
2  a_a   before
3  a_a   before
4  a_a   before
5  a_a   before
6  a_a   before
7  a_a   before
8  a_a   before
9  a_a   before
10 a_a   before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        continue
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "a") {
          break
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    before
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    before
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    before
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    before
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    before
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    before
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    before
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    before
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    before
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   before
1  i_a   before
1  x_a   before
1  y_a   before
2  a_a   before
2  i_a   before
2  x_a   before
2  y_a   before
3  a_a   before
3  i_a   before
3  x_a   before
3  y_a   before
4  a_a   before
4  i_a   before
4  x_a   before
4  y_a   before
5  a_a   before
5  i_a   before
5  x_a   before
5  y_a   before
6  a_a   before
6  i_a   before
6  x_a   before
6  y_a   before
7  a_a   before
7  i_a   before
7  x_a   before
7  y_a   before
8  a_a   before
8  i_a   before
8  x_a   before
8  y_a   before
9  a_a   before
9  i_a   before
9  x_a   before
9  y_a   before
10 a_a   before
10 i_a   before
10 x_a   before
10 y_a   before

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        break
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "a") {
          continue
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
2  a    eks
2  b    before
3  a    wye
3  b    before
4  a    eks
4  b    before
5  a    wye
5  b    before
6  a    zee
6  b    before
7  a    eks
7  b    before
8  a    zee
8  b    before
9  a    hat
9  b    before
10 a    pan
10 b    before

NR names output2
1  a_a   before
1  a_b   pan
1  a_i   1
1  a_x   0.346790
1  a_y   0.726803
2  a_a   before
2  a_b   pan
2  a_i   2
2  a_x   0.758680
2  a_y   0.522151
3  a_a   before
3  a_b   wye
3  a_i   3
3  a_x   0.204603
3  a_y   0.338319
4  a_a   before
4  a_b   wye
4  a_i   4
4  a_x   0.381399
4  a_y   0.134189
5  a_a   before
5  a_b   pan
5  a_i   5
5  a_x   0.573289
5  a_y   0.863624
6  a_a   before
6  a_b   pan
6  a_i   6
6  a_x   0.527126
6  a_y   0.493221
7  a_a   before
7  a_b   zee
7  a_i   7
7  a_x   0.611784
7  a_y   0.187885
8  a_a   before
8  a_b   wye
8  a_i   8
8  a_x   0.598554
8  a_y   0.976181
9  a_a   before
9  a_b   wye
9  a_i   9
9  a_x   0.031442
9  a_y   0.749551
10 a_a   before
10 a_b   wye
10 a_i   10
10 a_x   0.502626
10 a_y   0.952618

mlr --opprint --from ./reg-test/input/abixy put -q 
  for (k1, v1 in $*) {
    @output1[NR][k1] = "before";
    if (k1 == "b") {
        continue
    }
    @output1[NR][k1] = v1;
    for (k2, v2 in $*) {
      @output2[NR][k1."_".k2] = "before";
      if (k2 == "a") {
          continue
      }
      @output2[NR][k1."_".k2] = v2;
    }
  }
  end {
    emit @output1, "NR", "name";
    emit @output2, "NR", "names";
  }

NR name output1
1  a    pan
1  b    before
1  i    1
1  x    0.346790
1  y    0.726803
2  a    eks
2  b    before
2  i    2
2  x    0.758680
2  y    0.522151
3  a    wye
3  b    before
3  i    3
3  x    0.204603
3  y    0.338319
4  a    eks
4  b    before
4  i    4
4  x    0.381399
4  y    0.134189
5  a    wye
5  b    before
5  i    5
5  x    0.573289
5  y    0.863624
6  a    zee
6  b    before
6  i    6
6  x    0.527126
6  y    0.493221
7  a    eks
7  b    before
7  i    7
7  x    0.611784
7  y    0.187885
8  a    zee
8  b    before
8  i    8
8  x    0.598554
8  y    0.976181
9  a    hat
9  b    before
9  i    9
9  x    0.031442
9  y    0.749551
10 a    pan
10 b    before
10 i    10
10 x    0.502626
10 y    0.952618

NR names output2
1  a_a   before
1  a_b   pan
1  a_i   1
1  a_x   0.346790
1  a_y   0.726803
1  i_a   before
1  i_b   pan
1  i_i   1
1  i_x   0.346790
1  i_y   0.726803
1  x_a   before
1  x_b   pan
1  x_i   1
1  x_x   0.346790
1  x_y   0.726803
1  y_a   before
1  y_b   pan
1  y_i   1
1  y_x   0.346790
1  y_y   0.726803
2  a_a   before
2  a_b   pan
2  a_i   2
2  a_x   0.758680
2  a_y   0.522151
2  i_a   before
2  i_b   pan
2  i_i   2
2  i_x   0.758680
2  i_y   0.522151
2  x_a   before
2  x_b   pan
2  x_i   2
2  x_x   0.758680
2  x_y   0.522151
2  y_a   before
2  y_b   pan
2  y_i   2
2  y_x   0.758680
2  y_y   0.522151
3  a_a   before
3  a_b   wye
3  a_i   3
3  a_x   0.204603
3  a_y   0.338319
3  i_a   before
3  i_b   wye
3  i_i   3
3  i_x   0.204603
3  i_y   0.338319
3  x_a   before
3  x_b   wye
3  x_i   3
3  x_x   0.204603
3  x_y   0.338319
3  y_a   before
3  y_b   wye
3  y_i   3
3  y_x   0.204603
3  y_y   0.338319
4  a_a   before
4  a_b   wye
4  a_i   4
4  a_x   0.381399
4  a_y   0.134189
4  i_a   before
4  i_b   wye
4  i_i   4
4  i_x   0.381399
4  i_y   0.134189
4  x_a   before
4  x_b   wye
4  x_i   4
4  x_x   0.381399
4  x_y   0.134189
4  y_a   before
4  y_b   wye
4  y_i   4
4  y_x   0.381399
4  y_y   0.134189
5  a_a   before
5  a_b   pan
5  a_i   5
5  a_x   0.573289
5  a_y   0.863624
5  i_a   before
5  i_b   pan
5  i_i   5
5  i_x   0.573289
5  i_y   0.863624
5  x_a   before
5  x_b   pan
5  x_i   5
5  x_x   0.573289
5  x_y   0.863624
5  y_a   before
5  y_b   pan
5  y_i   5
5  y_x   0.573289
5  y_y   0.863624
6  a_a   before
6  a_b   pan
6  a_i   6
6  a_x   0.527126
6  a_y   0.493221
6  i_a   before
6  i_b   pan
6  i_i   6
6  i_x   0.527126
6  i_y   0.493221
6  x_a   before
6  x_b   pan
6  x_i   6
6  x_x   0.527126
6  x_y   0.493221
6  y_a   before
6  y_b   pan
6  y_i   6
6  y_x   0.527126
6  y_y   0.493221
7  a_a   before
7  a_b   zee
7  a_i   7
7  a_x   0.611784
7  a_y   0.187885
7  i_a   before
7  i_b   zee
7  i_i   7
7  i_x   0.611784
7  i_y   0.187885
7  x_a   before
7  x_b   zee
7  x_i   7
7  x_x   0.611784
7  x_y   0.187885
7  y_a   before
7  y_b   zee
7  y_i   7
7  y_x   0.611784
7  y_y   0.187885
8  a_a   before
8  a_b   wye
8  a_i   8
8  a_x   0.598554
8  a_y   0.976181
8  i_a   before
8  i_b   wye
8  i_i   8
8  i_x   0.598554
8  i_y   0.976181
8  x_a   before
8  x_b   wye
8  x_i   8
8  x_x   0.598554
8  x_y   0.976181
8  y_a   before
8  y_b   wye
8  y_i   8
8  y_x   0.598554
8  y_y   0.976181
9  a_a   before
9  a_b   wye
9  a_i   9
9  a_x   0.031442
9  a_y   0.749551
9  i_a   before
9  i_b   wye
9  i_i   9
9  i_x   0.031442
9  i_y   0.749551
9  x_a   before
9  x_b   wye
9  x_i   9
9  x_x   0.031442
9  x_y   0.749551
9  y_a   before
9  y_b   wye
9  y_i   9
9  y_x   0.031442
9  y_y   0.749551
10 a_a   before
10 a_b   wye
10 a_i   10
10 a_x   0.502626
10 a_y   0.952618
10 i_a   before
10 i_b   wye
10 i_i   10
10 i_x   0.502626
10 i_y   0.952618
10 x_a   before
10 x_b   wye
10 x_i   10
10 x_x   0.502626
10 x_y   0.952618
10 y_a   before
10 y_b   wye
10 y_i   10
10 y_x   0.502626
10 y_y   0.952618


================================================================
DSL BREAK/CONTINUE IN SINGLE FOR-OOSVAR


---------------------------------------------------------------- single-key tests, direct break/continue
mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        break;
        @output[k1] = v;
    }
    emit @output, "NR", "name"
  }


mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        @output[k1] = v;
        break;
        @output[k1] = "ERROR";
    }
    emit @output, "NR", "name"
  }

NR output
a  eks

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        continue;
        @output[k1] = v
    }
    emit @output, "NR", "name"
  }


mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        @output[k1] = v;
        continue;
        @output[k1] = "ERROR";
    }
    emit @output, "NR", "name"
  }

NR output
a  eks
b  pan
i  2
x  0.7586799647899636
y  0.5221511083334797


---------------------------------------------------------------- single-key tests, indirect break/continue
mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        if (k1 == "i") {
          break;
        }
        @output[k1] = v;
    }
    emit @output, "NR", "name"
  }

NR output
a  eks
b  pan

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        @output[k1] = v;
        if (k1 == "i") {
          break;
        }
    }
    emit @output, "NR", "name"
  }

NR output
a  eks
b  pan
i  2

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        if (k1 == "i") {
          continue;
        }
        @output[k1] = v
    }
    emit @output, "NR", "name"
  }

NR output
a  eks
b  pan
x  0.7586799647899636
y  0.5221511083334797

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for (k1, v in @logging[2]) {
        @output[k1] = v;
        if (k1 == "i") {
          continue;
        }
        @output[k1] = "reached";
    }
    emit @output, "NR", "name"
  }

NR output
a  reached
b  reached
i  2
x  reached
y  reached


---------------------------------------------------------------- multiple-key tests, direct break/continue
mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        break;
        @output[k1][k2] = v;
    }
    emit @output, "NR", "name"
  }


mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = v;
        break;
        @output[k1][k2] = "ERROR"
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        continue;
        @output[k1][k2] = v
    }
    emit @output, "NR", "name"
  }


mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = v;
        continue;
        @output[k1][k2] = "ERROR";
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    2
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    3
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    4
4  x    0.38139939387114097
4  y    0.13418874328430463
5  a    wye
5  b    pan
5  i    5
5  x    0.5732889198020006
5  y    0.8636244699032729
6  a    zee
6  b    pan
6  i    6
6  x    0.5271261600918548
6  y    0.49322128674835697
7  a    eks
7  b    zee
7  i    7
7  x    0.6117840605678454
7  y    0.1878849191181694
8  a    zee
8  b    wye
8  i    8
8  x    0.5985540091064224
8  y    0.976181385699006
9  a    hat
9  b    wye
9  i    9
9  x    0.03144187646093577
9  y    0.7495507603507059
10 a    pan
10 b    wye
10 i    10
10 x    0.5026260055412137
10 y    0.9526183602969864


---------------------------------------------------------------- multiple-key tests, indirect break/continue
mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        if (k1 == 5) {
          break;
        }
        @output[k1][k2] = v;
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    2
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    3
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    4
4  x    0.38139939387114097
4  y    0.13418874328430463

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        if (k2 == "i") {
          break;
        }
        @output[k1][k2] = v;
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = v;
        if (k1 == 5) {
          break;
        }
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    2
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    3
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    4
4  x    0.38139939387114097
4  y    0.13418874328430463
5  a    wye

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = v;
        if (k2 == "i") {
          break;
        }
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        if (k1 == 5) {
          continue;
        }
        @output[k1][k2] = v
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    2
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    3
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    4
4  x    0.38139939387114097
4  y    0.13418874328430463
6  a    zee
6  b    pan
6  i    6
6  x    0.5271261600918548
6  y    0.49322128674835697
7  a    eks
7  b    zee
7  i    7
7  x    0.6117840605678454
7  y    0.1878849191181694
8  a    zee
8  b    wye
8  i    8
8  x    0.5985540091064224
8  y    0.976181385699006
9  a    hat
9  b    wye
9  i    9
9  x    0.03144187646093577
9  y    0.7495507603507059
10 a    pan
10 b    wye
10 i    10
10 x    0.5026260055412137
10 y    0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        if (k2 == "i") {
          continue;
        }
        @output[k1][k2] = v
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  x    0.38139939387114097
4  y    0.13418874328430463
5  a    wye
5  b    pan
5  x    0.5732889198020006
5  y    0.8636244699032729
6  a    zee
6  b    pan
6  x    0.5271261600918548
6  y    0.49322128674835697
7  a    eks
7  b    zee
7  x    0.6117840605678454
7  y    0.1878849191181694
8  a    zee
8  b    wye
8  x    0.5985540091064224
8  y    0.976181385699006
9  a    hat
9  b    wye
9  x    0.03144187646093577
9  y    0.7495507603507059
10 a    pan
10 b    wye
10 x    0.5026260055412137
10 y    0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = "before";
        if (k1 == 5) {
          continue;
        }
        @output[k1][k2] = v;
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    1
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    2
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    3
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    4
4  x    0.38139939387114097
4  y    0.13418874328430463
5  a    before
5  b    before
5  i    before
5  x    before
5  y    before
6  a    zee
6  b    pan
6  i    6
6  x    0.5271261600918548
6  y    0.49322128674835697
7  a    eks
7  b    zee
7  i    7
7  x    0.6117840605678454
7  y    0.1878849191181694
8  a    zee
8  b    wye
8  i    8
8  x    0.5985540091064224
8  y    0.976181385699006
9  a    hat
9  b    wye
9  i    9
9  x    0.03144187646093577
9  y    0.7495507603507059
10 a    pan
10 b    wye
10 i    10
10 x    0.5026260055412137
10 y    0.9526183602969864

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        @output[k1][k2] = "before";
        if (k2 == "i") {
          continue;
        }
        @output[k1][k2] = v;
    }
    emit @output, "NR", "name"
  }

NR name output
1  a    pan
1  b    pan
1  i    before
1  x    0.3467901443380824
1  y    0.7268028627434533
2  a    eks
2  b    pan
2  i    before
2  x    0.7586799647899636
2  y    0.5221511083334797
3  a    wye
3  b    wye
3  i    before
3  x    0.20460330576630303
3  y    0.33831852551664776
4  a    eks
4  b    wye
4  i    before
4  x    0.38139939387114097
4  y    0.13418874328430463
5  a    wye
5  b    pan
5  i    before
5  x    0.5732889198020006
5  y    0.8636244699032729
6  a    zee
6  b    pan
6  i    before
6  x    0.5271261600918548
6  y    0.49322128674835697
7  a    eks
7  b    zee
7  i    before
7  x    0.6117840605678454
7  y    0.1878849191181694
8  a    zee
8  b    wye
8  i    before
8  x    0.5985540091064224
8  y    0.976181385699006
9  a    hat
9  b    wye
9  i    before
9  x    0.03144187646093577
9  y    0.7495507603507059
10 a    pan
10 b    wye
10 i    before
10 x    0.5026260055412137
10 y    0.9526183602969864


================================================================
DSL BREAK/CONTINUE IN NESTED FOR-OOSVAR

mlr --opprint --from ./reg-test/input/abixy put -q 
  @logging[NR] = $*;
  end {
    for ((k1, k2), v in @logging) {
        if (k1 != 2) {
          continue
        }
        for ((k3, k4), v in @logging) {
          if (k3 != 4) {
            continue
          }
          @output[k1][k2][k3][k4] = v;
        }
    }
    emit @output, "NR1", "name1", "NR2", "name2"
  }

NR1 name1 NR2 name2 output
2   a     4   a     eks
2   a     4   b     wye
2   a     4   i     4
2   a     4   x     0.38139939387114097
2   a     4   y     0.13418874328430463
2   b     4   a     eks
2   b     4   b     wye
2   b     4   i     4
2   b     4   x     0.38139939387114097
2   b     4   y     0.13418874328430463
2   i     4   a     eks
2   i     4   b     wye
2   i     4   i     4
2   i     4   x     0.38139939387114097
2   i     4   y     0.13418874328430463
2   x     4   a     eks
2   x     4   b     wye
2   x     4   i     4
2   x     4   x     0.38139939387114097
2   x     4   y     0.13418874328430463
2   y     4   a     eks
2   y     4   b     wye
2   y     4   i     4
2   y     4   x     0.38139939387114097
2   y     4   y     0.13418874328430463

