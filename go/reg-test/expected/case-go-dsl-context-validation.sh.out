
mlr -n put begin{begin{}}

mlr -n put begin{end{}}

mlr -n put end{begin{}}

mlr -n put end{end{}}

mlr -n put begin { func f(x) { return 2*x} }

mlr -n put begin { emit $x }

mlr -n put return 3

mlr -n put break

mlr -n put continue

mlr -n put func f() { break }

mlr -n put func f() { continue }

mlr -n put -v true
DSL EXPRESSION:
true
RAW AST:
* statement block
    * bare boolean
        * bool literal "true"


mlr -n put -v begin{true}
DSL EXPRESSION:
begin{true}
RAW AST:
* statement block
    * begin block
        * statement block
            * bare boolean
                * bool literal "true"


