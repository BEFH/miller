

---------------------------------------------------------------- key-only fors
mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  map o = {};
  o[ab] = xy;
  for (k in o) {
    print "k is " . k;
  }

k is pan_pan
k is eks_pan
k is _wye
k is eks_
k is wye_pan
k is zee_pan
k is eks_zee
k is zee_wye
k is _
k is pan_wye

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  unset @o;
  @o[ab] = xy;
  for (k in @o) {
    print "k is " . k;
  }

k is pan_pan
k is eks_pan
k is _wye
k is eks_
k is wye_pan
k is zee_pan
k is eks_zee
k is zee_wye
k is _
k is pan_wye

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  for (k in {ab : xy}) {
    print "k is " . k;
  }

k is pan_pan
k is eks_pan
k is _wye
k is eks_
k is wye_pan
k is zee_pan
k is eks_zee
k is zee_wye
k is _
k is pan_wye

mlr --from ./reg-test/input/abixy-het put -q 
  func f(a, b, x, y): map {
    ab = $a . "_" . $b;
    xy = $x . "_" . $y;
    return {ab : xy};
  }
  for (k in f($a, $b, $x, $y)) {
    print "k is " . k;
  }

k is pan_pan
k is eks_pan
k is _wye
k is eks_
k is wye_pan
k is zee_pan
k is eks_zee
k is zee_wye
k is _
k is pan_wye


---------------------------------------------------------------- key-value fors with scalar values
mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  map o = {};
  o[ab] = xy;
  for (k, v in o) {
    print "k is " . k . "  v is " . v;
  }

k is pan_pan  v is 0.3467901443380824_0.7268028627434533
k is eks_pan  v is 0.7586799647899636_0.5221511083334797
k is _wye  v is 0.20460330576630303_0.33831852551664776
k is eks_  v is 0.38139939387114097_0.13418874328430463
k is wye_pan  v is _0.8636244699032729
k is zee_pan  v is 0.5271261600918548_0.49322128674835697
k is eks_zee  v is 0.6117840605678454_0.1878849191181694
k is zee_wye  v is 0.5985540091064224_
k is _  v is 0.03144187646093577_0.7495507603507059
k is pan_wye  v is 0.5026260055412137_0.9526183602969864

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  unset @o;
  @o[ab] = xy;
  for (k, v in @o) {
    print "k is " . k . "  v is " . v;
  }

k is pan_pan  v is 0.3467901443380824_0.7268028627434533
k is eks_pan  v is 0.7586799647899636_0.5221511083334797
k is _wye  v is 0.20460330576630303_0.33831852551664776
k is eks_  v is 0.38139939387114097_0.13418874328430463
k is wye_pan  v is _0.8636244699032729
k is zee_pan  v is 0.5271261600918548_0.49322128674835697
k is eks_zee  v is 0.6117840605678454_0.1878849191181694
k is zee_wye  v is 0.5985540091064224_
k is _  v is 0.03144187646093577_0.7495507603507059
k is pan_wye  v is 0.5026260055412137_0.9526183602969864

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  for (k, v in {ab : xy}) {
    print "k is " . k . "  v is " . v;
  }

k is pan_pan  v is 0.3467901443380824_0.7268028627434533
k is eks_pan  v is 0.7586799647899636_0.5221511083334797
k is _wye  v is 0.20460330576630303_0.33831852551664776
k is eks_  v is 0.38139939387114097_0.13418874328430463
k is wye_pan  v is _0.8636244699032729
k is zee_pan  v is 0.5271261600918548_0.49322128674835697
k is eks_zee  v is 0.6117840605678454_0.1878849191181694
k is zee_wye  v is 0.5985540091064224_
k is _  v is 0.03144187646093577_0.7495507603507059
k is pan_wye  v is 0.5026260055412137_0.9526183602969864

mlr --from ./reg-test/input/abixy-het put -q 
  func f(a, b, x, y): map {
    ab = $a . "_" . $b;
    xy = $x . "_" . $y;
    return {ab : xy};
  }
  for (k, v in f($a, $b, $x, $y)) {
    print "k is " . k . "  v is " . v;
  }

k is pan_pan  v is 0.3467901443380824_0.7268028627434533
k is eks_pan  v is 0.7586799647899636_0.5221511083334797
k is _wye  v is 0.20460330576630303_0.33831852551664776
k is eks_  v is 0.38139939387114097_0.13418874328430463
k is wye_pan  v is _0.8636244699032729
k is zee_pan  v is 0.5271261600918548_0.49322128674835697
k is eks_zee  v is 0.6117840605678454_0.1878849191181694
k is zee_wye  v is 0.5985540091064224_
k is _  v is 0.03144187646093577_0.7495507603507059
k is pan_wye  v is 0.5026260055412137_0.9526183602969864


---------------------------------------------------------------- key-value fors with map values
mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  map o = {};
  o[ab] = {"foo": xy};
  for (k, v in o) {
    print "k is " . k . "  v is ";
    dump v;
  }

k is pan_pan  v is 
{
  "foo": "0.3467901443380824_0.7268028627434533"
}
k is eks_pan  v is 
{
  "foo": "0.7586799647899636_0.5221511083334797"
}
k is _wye  v is 
{
  "foo": "0.20460330576630303_0.33831852551664776"
}
k is eks_  v is 
{
  "foo": "0.38139939387114097_0.13418874328430463"
}
k is wye_pan  v is 
{
  "foo": "_0.8636244699032729"
}
k is zee_pan  v is 
{
  "foo": "0.5271261600918548_0.49322128674835697"
}
k is eks_zee  v is 
{
  "foo": "0.6117840605678454_0.1878849191181694"
}
k is zee_wye  v is 
{
  "foo": "0.5985540091064224_"
}
k is _  v is 
{
  "foo": "0.03144187646093577_0.7495507603507059"
}
k is pan_wye  v is 
{
  "foo": "0.5026260055412137_0.9526183602969864"
}

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  unset @o;
  @o[ab]["foo"] = xy;
  for (k, v in @o) {
    print "k is " . k . "  v is ";
    dump v;
  }

k is pan_pan  v is 
{
  "foo": "0.3467901443380824_0.7268028627434533"
}
k is eks_pan  v is 
{
  "foo": "0.7586799647899636_0.5221511083334797"
}
k is _wye  v is 
{
  "foo": "0.20460330576630303_0.33831852551664776"
}
k is eks_  v is 
{
  "foo": "0.38139939387114097_0.13418874328430463"
}
k is wye_pan  v is 
{
  "foo": "_0.8636244699032729"
}
k is zee_pan  v is 
{
  "foo": "0.5271261600918548_0.49322128674835697"
}
k is eks_zee  v is 
{
  "foo": "0.6117840605678454_0.1878849191181694"
}
k is zee_wye  v is 
{
  "foo": "0.5985540091064224_"
}
k is _  v is 
{
  "foo": "0.03144187646093577_0.7495507603507059"
}
k is pan_wye  v is 
{
  "foo": "0.5026260055412137_0.9526183602969864"
}

mlr --from ./reg-test/input/abixy-het put -q 
  ab = $a . "_" . $b;
  xy = $x . "_" . $y;
  for (k, v in {ab : {"foo": xy}}) {
    print "k is " . k . "  v is ";
    dump v;
  }

k is pan_pan  v is 
{
  "foo": "0.3467901443380824_0.7268028627434533"
}
k is eks_pan  v is 
{
  "foo": "0.7586799647899636_0.5221511083334797"
}
k is _wye  v is 
{
  "foo": "0.20460330576630303_0.33831852551664776"
}
k is eks_  v is 
{
  "foo": "0.38139939387114097_0.13418874328430463"
}
k is wye_pan  v is 
{
  "foo": "_0.8636244699032729"
}
k is zee_pan  v is 
{
  "foo": "0.5271261600918548_0.49322128674835697"
}
k is eks_zee  v is 
{
  "foo": "0.6117840605678454_0.1878849191181694"
}
k is zee_wye  v is 
{
  "foo": "0.5985540091064224_"
}
k is _  v is 
{
  "foo": "0.03144187646093577_0.7495507603507059"
}
k is pan_wye  v is 
{
  "foo": "0.5026260055412137_0.9526183602969864"
}

mlr --from ./reg-test/input/abixy-het put -q 
  func f(a, b, x, y): map {
    ab = $a . "_" . $b;
    xy = $x . "_" . $y;
    return {ab : {"foo" : xy}};
  }
  for (k, v in f($a, $b, $x, $y)) {
    print "k is " . k . "  v is ";
    dump v;
  }

k is pan_pan  v is 
{
  "foo": "0.3467901443380824_0.7268028627434533"
}
k is eks_pan  v is 
{
  "foo": "0.7586799647899636_0.5221511083334797"
}
k is _wye  v is 
{
  "foo": "0.20460330576630303_0.33831852551664776"
}
k is eks_  v is 
{
  "foo": "0.38139939387114097_0.13418874328430463"
}
k is wye_pan  v is 
{
  "foo": "_0.8636244699032729"
}
k is zee_pan  v is 
{
  "foo": "0.5271261600918548_0.49322128674835697"
}
k is eks_zee  v is 
{
  "foo": "0.6117840605678454_0.1878849191181694"
}
k is zee_wye  v is 
{
  "foo": "0.5985540091064224_"
}
k is _  v is 
{
  "foo": "0.03144187646093577_0.7495507603507059"
}
k is pan_wye  v is 
{
  "foo": "0.5026260055412137_0.9526183602969864"
}

