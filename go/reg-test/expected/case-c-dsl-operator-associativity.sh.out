
mlr put -v $x = 1 || 2 || 3 /dev/null
DSL EXPRESSION:
$x = 1 || 2 || 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "||"
            * operator "||"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 || 2 || 3 /dev/null
DSL EXPRESSION:
     1 || 2 || 3
RAW AST:
* statement block
    * bare boolean
        * operator "||"
            * operator "||"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ^^ 2 ^^ 3 /dev/null
DSL EXPRESSION:
$x = 1 ^^ 2 ^^ 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "^^"
            * operator "^^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ^^ 2 ^^ 3 /dev/null
DSL EXPRESSION:
     1 ^^ 2 ^^ 3
RAW AST:
* statement block
    * bare boolean
        * operator "^^"
            * operator "^^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 && 2 && 3 /dev/null
DSL EXPRESSION:
$x = 1 && 2 && 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "&&"
            * operator "&&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 && 2 && 3 /dev/null
DSL EXPRESSION:
     1 && 2 && 3
RAW AST:
* statement block
    * bare boolean
        * operator "&&"
            * operator "&&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  == 2  == 3 /dev/null
DSL EXPRESSION:
$x = 1  == 2  == 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "=="
            * operator "=="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  == 2  == 3 /dev/null
DSL EXPRESSION:
     1  == 2  == 3
RAW AST:
* statement block
    * bare boolean
        * operator "=="
            * operator "=="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  != 2  != 3 /dev/null
DSL EXPRESSION:
$x = 1  != 2  != 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "!="
            * operator "!="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  != 2  != 3 /dev/null
DSL EXPRESSION:
     1  != 2  != 3
RAW AST:
* statement block
    * bare boolean
        * operator "!="
            * operator "!="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  =~ 2  =~ 3 /dev/null
DSL EXPRESSION:
$x = 1  =~ 2  =~ 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "=~"
            * operator "=~"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  =~ 2  =~ 3 /dev/null
DSL EXPRESSION:
     1  =~ 2  =~ 3
RAW AST:
* statement block
    * bare boolean
        * operator "=~"
            * operator "=~"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 !=~ 2 !=~ 3 /dev/null
DSL EXPRESSION:
$x = 1 !=~ 2 !=~ 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "!=~"
            * operator "!=~"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 !=~ 2 !=~ 3 /dev/null
DSL EXPRESSION:
     1 !=~ 2 !=~ 3
RAW AST:
* statement block
    * bare boolean
        * operator "!=~"
            * operator "!=~"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  == 2  != 3 /dev/null
DSL EXPRESSION:
$x = 1  == 2  != 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "!="
            * operator "=="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  == 2  != 3 /dev/null
DSL EXPRESSION:
     1  == 2  != 3
RAW AST:
* statement block
    * bare boolean
        * operator "!="
            * operator "=="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  != 2  == 3 /dev/null
DSL EXPRESSION:
$x = 1  != 2  == 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "=="
            * operator "!="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  != 2  == 3 /dev/null
DSL EXPRESSION:
     1  != 2  == 3
RAW AST:
* statement block
    * bare boolean
        * operator "=="
            * operator "!="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  <  2  <  3 /dev/null
DSL EXPRESSION:
$x = 1  <  2  <  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<"
            * operator "<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  <  2  <  3 /dev/null
DSL EXPRESSION:
     1  <  2  <  3
RAW AST:
* statement block
    * bare boolean
        * operator "<"
            * operator "<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  <= 2  <= 3 /dev/null
DSL EXPRESSION:
$x = 1  <= 2  <= 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<="
            * operator "<="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  <= 2  <= 3 /dev/null
DSL EXPRESSION:
     1  <= 2  <= 3
RAW AST:
* statement block
    * bare boolean
        * operator "<="
            * operator "<="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  >  2  >  3 /dev/null
DSL EXPRESSION:
$x = 1  >  2  >  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator ">"
            * operator ">"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  >  2  >  3 /dev/null
DSL EXPRESSION:
     1  >  2  >  3
RAW AST:
* statement block
    * bare boolean
        * operator ">"
            * operator ">"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  >= 2  >= 3 /dev/null
DSL EXPRESSION:
$x = 1  >= 2  >= 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator ">="
            * operator ">="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  >= 2  >= 3 /dev/null
DSL EXPRESSION:
     1  >= 2  >= 3
RAW AST:
* statement block
    * bare boolean
        * operator ">="
            * operator ">="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  <  2  <= 3 /dev/null
DSL EXPRESSION:
$x = 1  <  2  <= 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<="
            * operator "<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  <  2  <= 3 /dev/null
DSL EXPRESSION:
     1  <  2  <= 3
RAW AST:
* statement block
    * bare boolean
        * operator "<="
            * operator "<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  <= 2  <  3 /dev/null
DSL EXPRESSION:
$x = 1  <= 2  <  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<"
            * operator "<="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  <= 2  <  3 /dev/null
DSL EXPRESSION:
     1  <= 2  <  3
RAW AST:
* statement block
    * bare boolean
        * operator "<"
            * operator "<="
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 |  2 |  3 /dev/null
DSL EXPRESSION:
$x = 1 |  2 |  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "|"
            * operator "|"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 |  2 |  3 /dev/null
DSL EXPRESSION:
     1 |  2 |  3
RAW AST:
* statement block
    * bare boolean
        * operator "|"
            * operator "|"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ^  2 ^  3 /dev/null
DSL EXPRESSION:
$x = 1 ^  2 ^  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "^"
            * operator "^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ^  2 ^  3 /dev/null
DSL EXPRESSION:
     1 ^  2 ^  3
RAW AST:
* statement block
    * bare boolean
        * operator "^"
            * operator "^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 &  2 &  3 /dev/null
DSL EXPRESSION:
$x = 1 &  2 &  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "&"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 &  2 &  3 /dev/null
DSL EXPRESSION:
     1 &  2 &  3
RAW AST:
* statement block
    * bare boolean
        * operator "&"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 |  2 &  3 /dev/null
DSL EXPRESSION:
$x = 1 |  2 &  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "|"
            * int literal "1"
            * operator "&"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 |  2 &  3 /dev/null
DSL EXPRESSION:
     1 |  2 &  3
RAW AST:
* statement block
    * bare boolean
        * operator "|"
            * int literal "1"
            * operator "&"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 |  2 ^  3 /dev/null
DSL EXPRESSION:
$x = 1 |  2 ^  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "|"
            * int literal "1"
            * operator "^"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 |  2 ^  3 /dev/null
DSL EXPRESSION:
     1 |  2 ^  3
RAW AST:
* statement block
    * bare boolean
        * operator "|"
            * int literal "1"
            * operator "^"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 ^  2 |  3 /dev/null
DSL EXPRESSION:
$x = 1 ^  2 |  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "|"
            * operator "^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ^  2 |  3 /dev/null
DSL EXPRESSION:
     1 ^  2 |  3
RAW AST:
* statement block
    * bare boolean
        * operator "|"
            * operator "^"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ^  2 &  3 /dev/null
DSL EXPRESSION:
$x = 1 ^  2 &  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "^"
            * int literal "1"
            * operator "&"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 ^  2 &  3 /dev/null
DSL EXPRESSION:
     1 ^  2 &  3
RAW AST:
* statement block
    * bare boolean
        * operator "^"
            * int literal "1"
            * operator "&"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 &  2 |  3 /dev/null
DSL EXPRESSION:
$x = 1 &  2 |  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "|"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 &  2 |  3 /dev/null
DSL EXPRESSION:
     1 &  2 |  3
RAW AST:
* statement block
    * bare boolean
        * operator "|"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 &  2 ^  3 /dev/null
DSL EXPRESSION:
$x = 1 &  2 ^  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "^"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 &  2 ^  3 /dev/null
DSL EXPRESSION:
     1 &  2 ^  3
RAW AST:
* statement block
    * bare boolean
        * operator "^"
            * operator "&"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  << 2  << 3 /dev/null
DSL EXPRESSION:
$x = 1  << 2  << 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<<"
            * operator "<<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  << 2  << 3 /dev/null
DSL EXPRESSION:
     1  << 2  << 3
RAW AST:
* statement block
    * bare boolean
        * operator "<<"
            * operator "<<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  >> 2  >> 3 /dev/null
DSL EXPRESSION:
$x = 1  >> 2  >> 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator ">>"
            * operator ">>"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  >> 2  >> 3 /dev/null
DSL EXPRESSION:
     1  >> 2  >> 3
RAW AST:
* statement block
    * bare boolean
        * operator ">>"
            * operator ">>"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  << 2  >> 3 /dev/null
DSL EXPRESSION:
$x = 1  << 2  >> 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator ">>"
            * operator "<<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  << 2  >> 3 /dev/null
DSL EXPRESSION:
     1  << 2  >> 3
RAW AST:
* statement block
    * bare boolean
        * operator ">>"
            * operator "<<"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1  >> 2  << 3 /dev/null
DSL EXPRESSION:
$x = 1  >> 2  << 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "<<"
            * operator ">>"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1  >> 2  << 3 /dev/null
DSL EXPRESSION:
     1  >> 2  << 3
RAW AST:
* statement block
    * bare boolean
        * operator "<<"
            * operator ">>"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 + 2 + 3 /dev/null
DSL EXPRESSION:
$x = 1 + 2 + 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "+"
            * operator "+"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 + 2 + 3 /dev/null
DSL EXPRESSION:
     1 + 2 + 3
RAW AST:
* statement block
    * bare boolean
        * operator "+"
            * operator "+"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 - 2 - 3 /dev/null
DSL EXPRESSION:
$x = 1 - 2 - 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "-"
            * operator "-"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 - 2 - 3 /dev/null
DSL EXPRESSION:
     1 - 2 - 3
RAW AST:
* statement block
    * bare boolean
        * operator "-"
            * operator "-"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 + 2 - 3 /dev/null
DSL EXPRESSION:
$x = 1 + 2 - 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "-"
            * operator "+"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 + 2 - 3 /dev/null
DSL EXPRESSION:
     1 + 2 - 3
RAW AST:
* statement block
    * bare boolean
        * operator "-"
            * operator "+"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 - 2 + 3 /dev/null
DSL EXPRESSION:
$x = 1 - 2 + 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "+"
            * operator "-"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 - 2 + 3 /dev/null
DSL EXPRESSION:
     1 - 2 + 3
RAW AST:
* statement block
    * bare boolean
        * operator "+"
            * operator "-"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 . 2 . 3 /dev/null
DSL EXPRESSION:
$x = 1 . 2 . 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "."
            * operator "."
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 . 2 . 3 /dev/null
DSL EXPRESSION:
     1 . 2 . 3
RAW AST:
* statement block
    * bare boolean
        * operator "."
            * operator "."
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 * 2 * 3 /dev/null
DSL EXPRESSION:
$x = 1 * 2 * 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 * 2 * 3 /dev/null
DSL EXPRESSION:
     1 * 2 * 3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 / 2 / 3 /dev/null
DSL EXPRESSION:
$x = 1 / 2 / 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 / 2 / 3 /dev/null
DSL EXPRESSION:
     1 / 2 / 3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 // 2 // 3 /dev/null
DSL EXPRESSION:
$x = 1 // 2 // 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 // 2 // 3 /dev/null
DSL EXPRESSION:
     1 // 2 // 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 % 2 % 3 /dev/null
DSL EXPRESSION:
$x = 1 % 2 % 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 % 2 % 3 /dev/null
DSL EXPRESSION:
     1 % 2 % 3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ** 2 ** 3 /dev/null
DSL EXPRESSION:
$x = 1 ** 2 ** 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "**"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 ** 2 ** 3 /dev/null
DSL EXPRESSION:
     1 ** 2 ** 3
RAW AST:
* statement block
    * bare boolean
        * operator "**"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 *  2 /  3 /dev/null
DSL EXPRESSION:
$x = 1 *  2 /  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 *  2 /  3 /dev/null
DSL EXPRESSION:
     1 *  2 /  3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 *  2 // 3 /dev/null
DSL EXPRESSION:
$x = 1 *  2 // 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 *  2 // 3 /dev/null
DSL EXPRESSION:
     1 *  2 // 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 *  2 %  3 /dev/null
DSL EXPRESSION:
$x = 1 *  2 %  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 *  2 %  3 /dev/null
DSL EXPRESSION:
     1 *  2 %  3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * operator "*"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 *  2 ** 3 /dev/null
DSL EXPRESSION:
$x = 1 *  2 ** 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 *  2 ** 3 /dev/null
DSL EXPRESSION:
     1 *  2 ** 3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 /  2 *  3 /dev/null
DSL EXPRESSION:
$x = 1 /  2 *  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 /  2 *  3 /dev/null
DSL EXPRESSION:
     1 /  2 *  3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 /  2 // 3 /dev/null
DSL EXPRESSION:
$x = 1 /  2 // 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 /  2 // 3 /dev/null
DSL EXPRESSION:
     1 /  2 // 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 /  2 %  3 /dev/null
DSL EXPRESSION:
$x = 1 /  2 %  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 /  2 %  3 /dev/null
DSL EXPRESSION:
     1 /  2 %  3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * operator "/"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 /  2 ** 3 /dev/null
DSL EXPRESSION:
$x = 1 /  2 ** 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 /  2 ** 3 /dev/null
DSL EXPRESSION:
     1 /  2 ** 3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 // 2 *  3 /dev/null
DSL EXPRESSION:
$x = 1 // 2 *  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 // 2 *  3 /dev/null
DSL EXPRESSION:
     1 // 2 *  3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 // 2 /  3 /dev/null
DSL EXPRESSION:
$x = 1 // 2 /  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 // 2 /  3 /dev/null
DSL EXPRESSION:
     1 // 2 /  3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 // 2 %  3 /dev/null
DSL EXPRESSION:
$x = 1 // 2 %  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 // 2 %  3 /dev/null
DSL EXPRESSION:
     1 // 2 %  3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * operator "//"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 // 2 ** 3 /dev/null
DSL EXPRESSION:
$x = 1 // 2 ** 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 // 2 ** 3 /dev/null
DSL EXPRESSION:
     1 // 2 ** 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 %  2 *  3 /dev/null
DSL EXPRESSION:
$x = 1 %  2 *  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 %  2 *  3 /dev/null
DSL EXPRESSION:
     1 %  2 *  3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 %  2 /  3 /dev/null
DSL EXPRESSION:
$x = 1 %  2 /  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 %  2 /  3 /dev/null
DSL EXPRESSION:
     1 %  2 /  3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 %  2 // 3 /dev/null
DSL EXPRESSION:
$x = 1 %  2 // 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 %  2 // 3 /dev/null
DSL EXPRESSION:
     1 %  2 // 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * operator "%"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 %  2 ** 3 /dev/null
DSL EXPRESSION:
$x = 1 %  2 ** 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr filter -v      1 %  2 ** 3 /dev/null
DSL EXPRESSION:
     1 %  2 ** 3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * int literal "1"
            * operator "**"
                * int literal "2"
                * int literal "3"


mlr put -v $x = 1 ** 2 *  3 /dev/null
DSL EXPRESSION:
$x = 1 ** 2 *  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "*"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ** 2 *  3 /dev/null
DSL EXPRESSION:
     1 ** 2 *  3
RAW AST:
* statement block
    * bare boolean
        * operator "*"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ** 2 /  3 /dev/null
DSL EXPRESSION:
$x = 1 ** 2 /  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "/"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ** 2 /  3 /dev/null
DSL EXPRESSION:
     1 ** 2 /  3
RAW AST:
* statement block
    * bare boolean
        * operator "/"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ** 2 // 3 /dev/null
DSL EXPRESSION:
$x = 1 ** 2 // 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "//"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ** 2 // 3 /dev/null
DSL EXPRESSION:
     1 ** 2 // 3
RAW AST:
* statement block
    * bare boolean
        * operator "//"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ** 2 %  3 /dev/null
DSL EXPRESSION:
$x = 1 ** 2 %  3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "%"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr filter -v      1 ** 2 %  3 /dev/null
DSL EXPRESSION:
     1 ** 2 %  3
RAW AST:
* statement block
    * bare boolean
        * operator "%"
            * operator "**"
                * int literal "1"
                * int literal "2"
            * int literal "3"


mlr put -v $x = ++1 /dev/null
DSL EXPRESSION:
$x = ++1
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "+"
            * operator "+"
                * int literal "1"


mlr filter -v      ++1 /dev/null
DSL EXPRESSION:
     ++1
RAW AST:
* statement block
    * bare boolean
        * operator "+"
            * operator "+"
                * int literal "1"


mlr put -v $x = --1 /dev/null
DSL EXPRESSION:
$x = --1
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "-"
            * operator "-"
                * int literal "1"


mlr filter -v      --1 /dev/null
DSL EXPRESSION:
     --1
RAW AST:
* statement block
    * bare boolean
        * operator "-"
            * operator "-"
                * int literal "1"


mlr put -v $x = !!1 /dev/null
DSL EXPRESSION:
$x = !!1
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "!"
            * operator "!"
                * int literal "1"


mlr filter -v      !!1 /dev/null
DSL EXPRESSION:
     !!1
RAW AST:
* statement block
    * bare boolean
        * operator "!"
            * operator "!"
                * int literal "1"


mlr put -v $x = ~~1 /dev/null
DSL EXPRESSION:
$x = ~~1
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "~"
            * operator "~"
                * int literal "1"


mlr filter -v      ~~1 /dev/null
DSL EXPRESSION:
     ~~1
RAW AST:
* statement block
    * bare boolean
        * operator "~"
            * operator "~"
                * int literal "1"


mlr put -v $x = 1 ? 2 : 3 /dev/null
DSL EXPRESSION:
$x = 1 ? 2 : 3
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "?:"
            * int literal "1"
            * int literal "2"
            * int literal "3"


mlr filter -v      1 ? 2 : 3 /dev/null
DSL EXPRESSION:
     1 ? 2 : 3
RAW AST:
* statement block
    * bare boolean
        * operator "?:"
            * int literal "1"
            * int literal "2"
            * int literal "3"


mlr put -v $x = 1 ? 2 ? 3 : 4 : 5 /dev/null
DSL EXPRESSION:
$x = 1 ? 2 ? 3 : 4 : 5
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "?:"
            * int literal "1"
            * operator "?:"
                * int literal "2"
                * int literal "3"
                * int literal "4"
            * int literal "5"


mlr filter -v      1 ? 2 ? 3 : 4 : 5 /dev/null
DSL EXPRESSION:
     1 ? 2 ? 3 : 4 : 5
RAW AST:
* statement block
    * bare boolean
        * operator "?:"
            * int literal "1"
            * operator "?:"
                * int literal "2"
                * int literal "3"
                * int literal "4"
            * int literal "5"


mlr put -v $x = 1 ? 2 : 3 ? 4 : 5 /dev/null
DSL EXPRESSION:
$x = 1 ? 2 : 3 ? 4 : 5
RAW AST:
* statement block
    * assignment "="
        * direct field value "x"
        * operator "?:"
            * int literal "1"
            * int literal "2"
            * operator "?:"
                * int literal "3"
                * int literal "4"
                * int literal "5"


mlr filter -v      1 ? 2 : 3 ? 4 : 5 /dev/null
DSL EXPRESSION:
     1 ? 2 : 3 ? 4 : 5
RAW AST:
* statement block
    * bare boolean
        * operator "?:"
            * int literal "1"
            * int literal "2"
            * operator "?:"
                * int literal "3"
                * int literal "4"
                * int literal "5"


