
mlr -n put end {
  @a = 111;
  emitp @a
}
a=111

mlr -n put end {
  @a = 111;
  emitp (@a)
}
a=111

mlr -n put end {
  @a[111] = 222;
  emitp @a, "s"
}
s=111,a=222

mlr -n put end {
  @a[111] = 222;
  emitp (@a), "s"
}
s=111,a=222

mlr -n put end {
  @a[111] = 222;
  @a[333] = 444;
  emitp @a, "s"
}
s=111,a=222
s=333,a=444

mlr -n put end {
  @a[111] = 222;
  @a[333] = 444;
  emitp (@a), "s"
}
s=111,a=222
s=333,a=444

mlr -n put end {
  @a[111][222] = 333;
  emitp @a, "s"
}
s=111,a:222=333

mlr -n put end {
  @a[111][222] = 333;
  emitp (@a), "s"
}
s=111,a:222=333

mlr -n put end {
  @a[111][222] = 333;
  @a[444][555] = 666;
  emitp @a, "s"
}
s=111,a:222=333
s=444,a:555=666

mlr -n put end {
  @a[111][222] = 333;
  @a[444][555] = 666;
  emitp (@a), "s"
}
s=111,a:222=333
s=444,a:555=666

mlr -n put end {
  @a[111][222] = 333;
  emitp @a, "s", "t"
}
s=111,t=222,a=333

mlr -n put end {
  @a[111][222] = 333;
  emitp (@a), "s", "t"
}
s=111,t=222,a=333

mlr -n put end {
  @a[111][222] = 333;
  emitp @a[111], "t"
}
t=222,a=333

mlr -n put end {
  @a[111][222] = 333;
  emitp (@a[111]), "t"
}
t=222,a=333


================================================================
LASHED EMIT SINGLES

mlr -n put end {
  @a = 111;
  emit @a
}
a=111

mlr -n put end {
  @a = 111;
  emit (@a)
}
a=111

mlr -n put end {
  @a[111] = 222;
  emit @a, "s"
}
s=111,a=222

mlr -n put end {
  @a[111] = 222;
  emit (@a), "s"
}
s=111,a=222

mlr -n put end {
  @a[111] = 222;
  @a[333] = 444;
  emit @a, "s"
}
s=111,a=222
s=333,a=444

mlr -n put end {
  @a[111] = 222;
  @a[333] = 444;
  emit (@a), "s"
}
s=111,a=222
s=333,a=444

mlr -n put end {
  @a[111][222] = 333;
  emit @a, "s"
}
s=111,222=333

mlr -n put end {
  @a[111][222] = 333;
  emit (@a), "s"
}
s=111,222=333


================================================================
LASHED EMITP PAIRS

mlr -n put end {
  @a = 111;
  @b = 222;
  emitp (@a, @b)
}
a=111,b=222

mlr -n put end {
  @a[1] = 111;
  @b[1] = 222;
  emitp (@a[1], @b[1])
}
a=111,b=222

mlr -n put end {
  @a[1][2][3] = 4;
  @b[1][2][3] = 8;
  emitp (@a, @b), "s", "t", "u"
}
s=1,t=2,u=3,a=4,b=8

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emitp (@a[1], @b[5]), "t", "u"
}
t=2,u=3,a=4,b=8

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][6][3] = 8;
  emitp (@a[1][2], @b[5][6]), "u"
}
u=3,a=4,b=8


================================================================
LASHED EMIT PAIRS

mlr -n put end {
  @a = 111;
  @b = 222;
  emit (@a, @b)
}
a=111,b=222

mlr -n put end {
  @a[1] = 111;
  @b[1] = 222;
  emit (@a[1], @b[1])
}
a=111,b=222

mlr -n put end {
  @a[1][2][3] = 4;
  @b[1][2][3] = 8;
  emit (@a, @b), "s", "t", "u"
}
s=1,t=2,u=3,a=4,b=8

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emit (@a[1], @b[5]), "t", "u"
}
t=2,u=3,a=4,b=8

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][6][3] = 8;
  emit (@a[1][2], @b[5][6]), "u"
}
u=3,a=4,b=8


================================================================
LASHED EMIT WITH VARYING DEPTH

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emit (@a[1], @b[2]), "t"
}
t=1,a=1,b=7
t=2,a=2,b=8

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emit (@a, @b), "s", "t"
}
s=1,t=1,a=1,b=5
s=1,t=2,a=2,b=6
s=2,t=1,a=3,b=7
s=2,t=2,a=4,b=8

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @a[3] = 10;
  @a[4] = 11;
  @a[5][6][7] = 12;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emit (@a, @b), "s", "t"
}
s=1,t=1,a=1,b=5
s=1,t=2,a=2,b=6
s=2,t=1,a=3,b=7
s=2,t=2,a=4,b=8
s=3,a=10
s=4,a=11
s=5,t=6,7=12

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @a[3] = 10;
  @a[4] = 11;
  @a[5][6][7] = 12;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emit (@b, @a), "s", "t"
}
s=1,t=1,b=5,a=1
s=1,t=2,b=6,a=2
s=2,t=1,b=7,a=3
s=2,t=2,b=8,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emit (@a[1], @b[3]), "t", "u"
}
t=2,u=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emit (@a[1][2], @b[5][9]), "t", "u"
}
t=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emit (@a[1][2], @b[9][2]), "t", "u"
}
t=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emit (@a[9], @b[5]), "t", "u"
}


================================================================
LASHED EMITP WITH VARYING DEPTH

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emitp (@a[1], @b[2]), "t"
}
t=1,a=1,b=7
t=2,a=2,b=8

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emitp (@a, @b), "s", "t"
}
s=1,t=1,a=1,b=5
s=1,t=2,a=2,b=6
s=2,t=1,a=3,b=7
s=2,t=2,a=4,b=8

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @a[3] = 10;
  @a[4] = 11;
  @a[5][6][7] = 12;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emitp (@a, @b), "s", "t"
}
s=1,t=1,a=1,b=5
s=1,t=2,a=2,b=6
s=2,t=1,a=3,b=7
s=2,t=2,a=4,b=8
s=3,a=10
s=4,a=11
s=5,t=6,a:7=12

mlr -n put end {
  @a[1][1] = 1;
  @a[1][2] = 2;
  @a[2][1] = 3;
  @a[2][2] = 4;
  @a[3] = 10;
  @a[4] = 11;
  @a[5][6][7] = 12;
  @b[1][1] = 5;
  @b[1][2] = 6;
  @b[2][1] = 7;
  @b[2][2] = 8;
  emitp (@b, @a), "s", "t"
}
s=1,t=1,b=5,a=1
s=1,t=2,b=6,a=2
s=2,t=1,b=7,a=3
s=2,t=2,b=8,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emitp (@a[1], @b[3]), "t", "u"
}
t=2,u=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emitp (@a[1][2], @b[5][9]), "t", "u"
}
t=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emitp (@a[1][2], @b[9][2]), "t", "u"
}
t=3,a=4

mlr -n put end {
  @a[1][2][3] = 4;
  @b[5][2][3] = 8;
  emitp (@a[9], @b[5]), "t", "u"
}


================================================================
CANONICAL LASHED EMIT

mlr --from ./reg-test/input/abixy-wide --opprint put -q 
  @count[$a] += 1;
  @sum[$a] += $x;
  end {
      for (a, c in @count) {
          @mean[a] = @sum[a] / @count[a]
      }
      emit (@sum, @count, @mean), "a"
  }

a   sum        count mean
cat 207.843964 413   0.503254
pan 191.530740 384   0.498778
wye 188.110135 370   0.508406
dog 215.541519 424   0.508353
hat 206.091824 409   0.503892

mlr --from ./reg-test/input/abixy-wide --opprint put -q 
  @count[$a][$b] += 1;
  @sum[$a][$b] += $x;
  end {
      for ((a, b), c in @count) {
          @mean[a][b] = @sum[a][b] / @count[a][b]
      }
      emit (@sum, @count, @mean), "a", "b"
  }

a   b   sum       count mean
cat pan 42.327158 89    0.475586
cat hat 43.184410 90    0.479827
cat dog 39.241473 78    0.503096
cat wye 45.196775 77    0.586971
cat cat 37.894148 79    0.479673
pan wye 40.135300 78    0.514555
pan pan 36.226334 77    0.470472
pan hat 35.115869 67    0.524117
pan dog 37.817560 73    0.518049
pan cat 42.235677 89    0.474558
wye cat 40.805723 74    0.551429
wye hat 41.166697 87    0.473180
wye dog 40.619547 76    0.534468
wye wye 32.490973 67    0.484940
wye pan 33.027196 66    0.500412
dog hat 43.515162 88    0.494490
dog pan 45.614011 87    0.524299
dog dog 43.545956 87    0.500528
dog wye 37.223795 79    0.471187
dog cat 45.642595 83    0.549911
hat hat 48.058897 88    0.546124
hat wye 34.054270 70    0.486490
hat pan 42.538758 85    0.500456
hat cat 44.325655 88    0.503701
hat dog 37.114244 78    0.475824


================================================================
MAP-VARIANT EMITS

mlr --from ./reg-test/input/abixy-het --opprint put -q o=$a.$b; emit o
o
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q o={"ab":$a.$b}; emit o
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q @o=$a.$b; emit @o
o
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
zeewye
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q @o={"ab":$a.$b}; emit @o
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q @o=$a.$b; emit @*
o
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
zeewye
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q @o={"ab":$a.$b}; emit @*
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q emit $a.$b
mlr DSL: syntax error at "$a"
mlr put: syntax error on DSL parse of 'emit $a.$b'

mlr --from ./reg-test/input/abixy-het --opprint put -q emit {"ab":$a.$b}
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a,b) { return a.b } o = f($a, $b); emit o
o
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a,b) { return a.b } emit f($a, $b)

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a,b) { return {"ab": a.b} } o = f($a, $b); emit o
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a,b) { return {"ab": a.b} } emit f($a, $b)
ab
panpan
ekspan
wye
eks
wyepan
zeepan
ekszee
zeewye
-
panwye


================================================================
MAP-VARIANT LASHED EMITS


---------------------------------------------------------------- scalar lashed emits
mlr --from ./reg-test/input/abixy-het --opprint put -q emit ($a . "_" . $b, $x . "_" . $y)
mlr DSL: syntax error at "$a"
mlr put: syntax error on DSL parse of 'emit ($a . "_" . $b, $x . "_" . $y)'

mlr --from ./reg-test/input/abixy-het --opprint put -q  o = $a . "_" . $b;  p = $x . "_" . $y; emit  (o,  p)
o       p
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q @o = $a . "_" . $b; @p = $x . "_" . $y; emit (@o, @p)
o       p
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return a . "_" . b }  o = f($a, $b);  p = f($x, $y); emit  (o,  p)
o       p
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return a . "_" . b } @o = f($a, $b); @p = f($x, $y); emit (@o, @p)
o       p
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return a . "_" . b } emit (f($a, $b), f($x, $y))
_
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618


---------------------------------------------------------------- non-scalar non-keyed lashed emits
mlr --from ./reg-test/input/abixy-het --opprint put -q emit ({"ab": $a . "_" . $b}, {"ab": $x . "_" . $y})
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q  o = {"ab": $a . "_" . $b};  p = {"ab": $x . "_" . $y}; emit  (o, p)
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q @o = {"ab": $a . "_" . $b}; @p = {"ab": $x . "_" . $y}; emit (@o, @p)
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} }  o = f($a, $b);  p = f($x, $y); emit  (o, p)
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } @o = f($a, $b); @p = f($x, $y); emit (@o, @p)
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } emit (f($a, $b), f($x, $y))
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618


---------------------------------------------------------------- non-scalar non-keyed lashed emits
mlr --from ./reg-test/input/abixy-het --opprint put -q emitp ({"ab": $a . "_" . $b}, {"ab": $x . "_" . $y})
_:ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q  o = {"ab": $a . "_" . $b};  p = {"ab": $x . "_" . $y}; emitp  (o, p)
o:ab    p:ab
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q @o = {"ab": $a . "_" . $b}; @p = {"ab": $x . "_" . $y}; emitp (@o, @p)
o:ab    p:ab
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} }  o = f($a, $b);  p = f($x, $y); emitp  (o, p)
o:ab    p:ab
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } @o = f($a, $b); @p = f($x, $y); emitp (@o, @p)
o:ab    p:ab
pan_pan 0.346790_0.726803
eks_pan 0.758680_0.522151
_wye    0.204603_0.338319
eks_    0.381399_0.134189
wye_pan _0.863624
zee_pan 0.527126_0.493221
eks_zee 0.611784_0.187885
zee_wye 0.598554_
_       0.031442_0.749551
pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } emit (f($a, $b), f($x, $y))
ab
0.346790_0.726803
0.758680_0.522151
0.204603_0.338319
0.381399_0.134189
_0.863624
0.527126_0.493221
0.611784_0.187885
0.598554_
0.031442_0.749551
0.502626_0.952618


---------------------------------------------------------------- non-scalar keyed lashed emits
mlr --from ./reg-test/input/abixy-het --opprint put -q emit ({"ab": $a . "_" . $b}, {"ab": $x . "_" . $y}), "ab"
ab _
ab 0.346790_0.726803
ab 0.758680_0.522151
ab 0.204603_0.338319
ab 0.381399_0.134189
ab _0.863624
ab 0.527126_0.493221
ab 0.611784_0.187885
ab 0.598554_
ab 0.031442_0.749551
ab 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q  o = {"ab": $a . "_" . $b};  p = {"ab": $x . "_" . $y}; emit  (o, p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q @o = {"ab": $a . "_" . $b}; @p = {"ab": $x . "_" . $y}; emit (@o, @p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} }  o = f($a, $b);  p = f($x, $y); emit  (o, p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } @o = f($a, $b); @p = f($x, $y); emit (@o, @p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } emit (f($a, $b), f($x, $y)), "ab"
ab _
ab 0.346790_0.726803
ab 0.758680_0.522151
ab 0.204603_0.338319
ab 0.381399_0.134189
ab _0.863624
ab 0.527126_0.493221
ab 0.611784_0.187885
ab 0.598554_
ab 0.031442_0.749551
ab 0.502626_0.952618


---------------------------------------------------------------- non-scalar keyed lashed emits
mlr --from ./reg-test/input/abixy-het --opprint put -q emitp ({"ab": $a . "_" . $b}, {"ab": $x . "_" . $y}), "ab"
ab _
ab 0.346790_0.726803
ab 0.758680_0.522151
ab 0.204603_0.338319
ab 0.381399_0.134189
ab _0.863624
ab 0.527126_0.493221
ab 0.611784_0.187885
ab 0.598554_
ab 0.031442_0.749551
ab 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q  o = {"ab": $a . "_" . $b};  p = {"ab": $x . "_" . $y}; emitp  (o, p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q @o = {"ab": $a . "_" . $b}; @p = {"ab": $x . "_" . $y}; emitp (@o, @p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} }  o = f($a, $b);  p = f($x, $y); emitp  (o, p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } @o = f($a, $b); @p = f($x, $y); emitp (@o, @p), "ab"
ab o       p
ab pan_pan 0.346790_0.726803
ab eks_pan 0.758680_0.522151
ab _wye    0.204603_0.338319
ab eks_    0.381399_0.134189
ab wye_pan _0.863624
ab zee_pan 0.527126_0.493221
ab eks_zee 0.611784_0.187885
ab zee_wye 0.598554_
ab _       0.031442_0.749551
ab pan_wye 0.502626_0.952618

mlr --from ./reg-test/input/abixy-het --opprint put -q func f(a, b) { return {"ab": a . "_" . b} } emitp (f($a, $b), f($x, $y)), "ab"
ab _
ab 0.346790_0.726803
ab 0.758680_0.522151
ab 0.204603_0.338319
ab 0.381399_0.134189
ab _0.863624
ab 0.527126_0.493221
ab 0.611784_0.187885
ab 0.598554_
ab 0.031442_0.749551
ab 0.502626_0.952618

