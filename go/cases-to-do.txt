================================================================
BUG:

rrv ./reg-test/cases/case-c-dsl-empty-statements.sh
* mlr_expect_fail -n filter -v ''
  C: "filter statement must not be empty"

rrv -C1 ./reg-test/cases/case-c-dsl-for-bind-loops-for-valgrind.sh
* absent-bind discrepancy between C & Go

rrv ./reg-test/cases/case-c-dsl-context-specific-validation.sh
rrv -C1 ./reg-test/cases/case-c-dsl-context-specific-validation.sh
* subr and more ... also needs check for filter statement within filter commands

rrv ./reg-test/cases/case-c-dsl-forbind-typedecl.sh
rrv ./reg-test/cases/case-c-dsl-localvar-typedecl.sh
rrv ./reg-test/cases/case-c-dsl-local-map-variable-typedecl.sh
* str s = "a"; s = 3 doesn't trigger -- needs gate-retention ...

rrv ./reg-test/cases/case-c-dsl-for-map-depth.sh
* Miller: looped-over item is not a map or array.
  Needs to treat absent as zero-pass case

rrv ./reg-test/cases/case-c-dsl-map-variant-dumps.sh
* run_mlr --from $indir/abixy-het put -q 'dump {"a"."b":$a.$b}'
  Miller: couldn't assign variable var a from value absent (absent)

rrv ./reg-test/cases/case-c-dsl-null-empty-handling.sh
* "conditional expression did not evaluate to boolean" -- versus @nonesuch {} P/A in C ...

rrv ./reg-test/cases/case-c-dsl-triple-for-loops.sh
* Needs to do this:
  "Continuation statements are split into the final boolean, and the statements before (if any)."

rrv ./reg-test/cases/case-c-label.sh
* needs uniqueness-checker

================================================================
MULTIPLE ISSUES:

rrv ./reg-test/cases/case-c-dsl-functional-tests.sh
* bug mlr filter $nosuchfield>.3 ./reg-test/input/abixy
* ofmt
* env
-> split up this big case-file

* typeof prints different things -- regularize ...

* 'x=' -> MT_EMPTY vs MT_STRING

================================================================
LF/CRLF ETC.

rrv ./reg-test/cases/case-c-multi-character-ixs.sh
rrv ./reg-test/cases/case-c-implicit-header-csv-input.sh
rrv ./reg-test/cases/case-c-missing-final-lf.sh

================================================================
ENV

rrv ./reg-test/cases/case-c-dsl-functional-tests.sh

================================================================
PUT -S / -F / -A

rrv ./reg-test/cases/case-c-dsl-type-inference.sh
rrv -C1 ./reg-test/cases/case-c-dsl-for-srec-loops.sh
rrv -C1 ./reg-test/cases/case-c-dsl-type-inference.sh
rrv ./reg-test/cases/case-c-dsl-pythonic-division.sh

rrv -C20 ./reg-test/cases/case-c-dsl-local-map-variable-write-read.sh
rrv -C20 ./reg-test/cases/case-c-dsl-local-map-variable-write-read.sh
* put -a

================================================================
ARRAY/MAP

rrv -C5 ./reg-test/cases/case-c-dsl-for-oosvar-loops.sh
rrv ./reg-test/cases/case-c-dsl-mapvar-assignments.sh

rrv ./reg-test/cases/case-c-dsl-split-join.sh
rrv -C5 ./reg-test/cases/case-c-dsl-asserting.sh
rrv -C1 ./reg-test/cases/case-c-dsl-length-depth-leafcount.sh
* int map keys

rrv -C1 ./reg-test/cases/case-c-dsl-mapvar-for-loops.sh
* int map keys

rrv ./reg-test/cases/case-c-dsl-haskey.sh
* haskey({3:4}, 3)

rrv ./reg-test/cases/case-c-dsl-extended-typeof.sh

rrv ./reg-test/cases/case-c-dsl-is-predicates.sh
* {1:2} is empty-map in Go; should step up (populate) or step down (error)

  func (this *Mlrval) MapPut(key *Mlrval, value *Mlrval) {
      if this.mvtype != MT_MAP {
          // TODO: need to be careful about semantics here.
          // Silent no-ops are not good UX ...
          return
      }
      if key.mvtype != MT_STRING {
          // TODO: need to be careful about semantics here.
          // Silent no-ops are not good UX ...
          return
      }
      this.mapval.PutCopy(&key.printrep, value)
  }

================================================================
SUBR

rrv -C1 ./reg-test/cases/case-c-dsl-context-specific-validation.sh
* subr and more ... also needs check for filter statement within filter commands

rrv ./reg-test/cases/case-c-dsl-user-defined-functions-and-subroutines.sh
rrv ./reg-test/cases/case-c-dsl-user-defined-subroutines.sh
rrv ./reg-test/cases/case-c-dsl-trailing-commas.sh
rrv ./reg-test/cases/case-c-dsl-argpass-typedecl.sh
rrv ./reg-test/cases/case-c-dsl-multipart-scripts.sh

================================================================
FORMATTING?

rrv ./reg-test/cases/case-c-dsl-forbind-typedecl.sh
rrv ./reg-test/cases/case-c-dsl-indirect-srec-assignments.sh
rrv ./reg-test/cases/case-c-dsl-operator-associativity.sh
rrv ./reg-test/cases/case-c-dsl-operator-precedence.sh
rrv ./reg-test/cases/case-c-dsl-typed-overlay.sh
rrv ./reg-test/cases/case-c-localvar-unsets.sh

================================================================
PARTIALLY IMPLEMENTED:

rrv ./reg-test/cases/case-c-clean-whitespace.sh
rrv ./reg-test/cases/case-c-cut.sh
rrv ./reg-test/cases/case-c-dsl-indirect-oosvar-assignments.sh
rrv ./reg-test/cases/case-c-dsl-scientific-notation.sh
rrv ./reg-test/cases/case-c-format-values.sh
rrv ./reg-test/cases/case-c-implicit-header-csv-input.sh
rrv ./reg-test/cases/case-c-localvar-unsets.sh
rrv ./reg-test/cases/case-c-rfc-csv.sh
rrv ./reg-test/cases/case-c-space-padding.sh
rrv ./reg-test/cases/case-c-utf8-alignment.sh

================================================================
PPRINT --BARRED --RIGHT

rrv ./reg-test/cases/case-c-barred-pprint.sh

================================================================
BACKWARD INCOMPATIBILITIES:

rrv ./reg-test/cases/case-c-dsl-print.sh
rrv ./reg-test/cases/case-c-dsl-substr.sh

rrv -C20 ./reg-test/cases/case-c-dsl-user-defined-functions.sh
* array 1-up

================================================================
NEED EMITP/MULTI-EMIT

rrv ./reg-test/cases/case-c-dsl-absent-empty.sh
rrv ./reg-test/cases/case-c-dsl-break-continue.sh
rrv ./reg-test/cases/case-c-dsl-lashed-emitp-singles.sh
rrv ./reg-test/cases/case-c-dsl-mapvar-emit.sh
rrv ./reg-test/cases/case-c-dsl-oosvar-assignments.sh

rrv -C20 ./reg-test/cases/case-c-dsl-type-predicates.sh
* multi-emit

================================================================
NOT IMPLEMENTED YET:

rrv ./reg-test/cases/case-c-format-conversion-keystroke-savers.sh
* needs --ipprint

rrv ./reg-test/cases/case-c-dsl-filter-pattern-action.sh
* regex

rrv -C1 ./reg-test/cases/case-c-dsl-filter-pattern-action.sh
* regexi

rrv ./reg-test/cases/case-c-het-pprint-input.sh
* new pprint reader not done yet

rrv ./reg-test/cases/case-c-dsl-oosvars.sh
* uses mlr step

rrv ./reg-test/cases/case-c-auxents.sh
rrv ./reg-test/cases/case-c-bar.sh
rrv ./reg-test/cases/case-c-compressed-input.sh
rrv ./reg-test/cases/case-c-count-distinct.sh
rrv ./reg-test/cases/case-c-csv-rs-environment-defaults.sh
rrv ./reg-test/cases/case-c-dsl-gmt-date-time-functions.sh
rrv ./reg-test/cases/case-c-dsl-local-date-time-functions.sh
rrv ./reg-test/cases/case-c-dsl-mapvars-udfs-subroutines.sh
rrv ./reg-test/cases/case-c-dsl-parameterized-emit.sh
rrv ./reg-test/cases/case-c-dsl-positional-indexing.sh
rrv ./reg-test/cases/case-c-dsl-prefixed-unprefixed-emit.sh
rrv ./reg-test/cases/case-c-dsl-redirects.sh
rrv ./reg-test/cases/case-c-dsl-regex-captures.sh
rrv ./reg-test/cases/case-c-dsl-regex-matching.sh
rrv ./reg-test/cases/case-c-dsl-stack-allocation.sh
rrv ./reg-test/cases/case-c-format-values.sh
rrv ./reg-test/cases/case-c-fraction.sh
rrv ./reg-test/cases/case-c-having-fields.sh
rrv ./reg-test/cases/case-c-head-early-out.sh
rrv ./reg-test/cases/case-c-histogram.sh
rrv ./reg-test/cases/case-c-in-place-processing.sh
rrv ./reg-test/cases/case-c-int-float-stats1-step1.sh
rrv ./reg-test/cases/case-c-join-mixed-format.sh
rrv ./reg-test/cases/case-c-join-prepipe.sh
rrv ./reg-test/cases/case-c-join.sh
rrv ./reg-test/cases/case-c-json-io.sh
rrv ./reg-test/cases/case-c-lf-crlf-and-autodetect.sh
rrv ./reg-test/cases/case-c-markdown-output.sh
rrv ./reg-test/cases/case-c-merge-fields.sh
rrv ./reg-test/cases/case-c-most-least-frequent.sh
rrv ./reg-test/cases/case-c-nest.sh
rrv ./reg-test/cases/case-c-null-field-input.sh
rrv ./reg-test/cases/case-c-number-formatting.sh
rrv ./reg-test/cases/case-c-rename-regex.sh
rrv ./reg-test/cases/case-c-repeat.sh
rrv ./reg-test/cases/case-c-reshape.sh
rrv ./reg-test/cases/case-c-seqgen.sh
rrv ./reg-test/cases/case-c-skip-pass-comments.sh
rrv ./reg-test/cases/case-c-stats1-percentile-interpolation.sh
rrv ./reg-test/cases/case-c-stats1-regexed-field-names.sh
rrv ./reg-test/cases/case-c-stats1.sh
rrv ./reg-test/cases/case-c-stats2.sh
rrv ./reg-test/cases/case-c-step.sh
rrv ./reg-test/cases/case-c-top.sh
rrv ./reg-test/cases/case-c-uniq.sh
rrv ./reg-test/cases/case-c-utf8-bom.sh

================================================================
JUST FORMATTING NOW??

rrv ./reg-test/cases/case-c-dsl-type-inference.sh
rrv -C1 ./reg-test/cases/case-c-dsl-for-srec-loops.sh
rrv -C1 ./reg-test/cases/case-c-dsl-type-inference.sh
rrv ./reg-test/cases/case-c-dsl-pythonic-division.sh

rrv -C20 ./reg-test/cases/case-c-dsl-local-map-variable-write-read.sh
rrv -C1 ./reg-test/cases/case-c-dsl-local-map-variable-write-read.sh

# ----------------------------------------------------------------
announce MAP-VARIANT DUMPS

run_mlr --from $indir/abixy-het put -q 'dump {"a"."b":$a.$b}'
run_mlr --from $indir/abixy-het put -q 'func f(a, b) { return {"a"."b":a.b} } dump f($a, $b)'
